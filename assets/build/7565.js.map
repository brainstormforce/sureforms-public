{"version":3,"file":"7565.js","mappings":"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","sources":["webpack://sureforms/./node_modules/@surecart/components-react/node_modules/@surecart/components/dist/esm/consumer-1db89974.js","webpack://sureforms/./node_modules/@surecart/components-react/node_modules/@surecart/components/dist/esm/index-e534c726.js","webpack://sureforms/./node_modules/@surecart/components-react/node_modules/@surecart/components/dist/esm/processor-6e16ca02.js","webpack://sureforms/./node_modules/@surecart/components-react/node_modules/@surecart/components/dist/esm/sc-payment.entry.js"],"sourcesContent":["import { g as getElement } from './index-430bb51b.js';\n\nvar createDeferredPromise = function () {\n    var resolve;\n    var promise = new Promise(function (res) { resolve = res; });\n    return { promise: promise, resolve: resolve };\n};\n\nvar openWormhole = function (Component, props, isBlocking) {\n    if (isBlocking === void 0) { isBlocking = true; }\n    var isConstructor = (Component.constructor.name === 'Function');\n    var Proto = isConstructor ? Component.prototype : Component;\n    var componentWillLoad = Proto.componentWillLoad;\n    Proto.componentWillLoad = function () {\n        var _this = this;\n        var el = getElement(this);\n        var onOpen = createDeferredPromise();\n        var event = new CustomEvent('openWormhole', {\n            bubbles: true,\n            composed: true,\n            detail: {\n                consumer: this,\n                fields: props,\n                updater: function (prop, value) {\n                    var target = (prop in el) ? el : _this;\n                    target[prop] = value;\n                },\n                onOpen: onOpen,\n            },\n        });\n        el.dispatchEvent(event);\n        var willLoad = function () {\n            if (componentWillLoad) {\n                return componentWillLoad.call(_this);\n            }\n        };\n        return isBlocking ? onOpen.promise.then(function () { return willLoad(); }) : (willLoad());\n    };\n};\n\nexport { openWormhole as o };\n","const convertLineItemsToLineItemData = (lineItems) => {\n  return ((lineItems === null || lineItems === void 0 ? void 0 : lineItems.data) || []).map(item => {\n    return {\n      price_id: item.price.id,\n      quantity: item.quantity,\n    };\n  });\n};\n/**\n * Get price ids from line items\n * @param order\n * @returns\n */\nconst getLineItemPriceIds = (line_items) => {\n  return ((line_items === null || line_items === void 0 ? void 0 : line_items.data) || []).map(item => item.price.id);\n};\n/**\n * Is the price in a checkout session\n */\nconst isPriceInOrder = (price, order) => {\n  const priceIds = getLineItemPriceIds(order === null || order === void 0 ? void 0 : order.line_items);\n  return !!priceIds.find(id => (price === null || price === void 0 ? void 0 : price.id) === id);\n};\n/** Check if the order has a subscription */\nconst hasSubscription = (order) => {\n  var _a, _b, _c;\n  // no line items.\n  if (!((_b = (_a = order === null || order === void 0 ? void 0 : order.line_items) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.length))\n    return false;\n  // has subscription product.\n  return (_c = order === null || order === void 0 ? void 0 : order.line_items.data) === null || _c === void 0 ? void 0 : _c.some(item => { var _a; return (_a = item === null || item === void 0 ? void 0 : item.price) === null || _a === void 0 ? void 0 : _a.recurring_interval_count; });\n};\n/** Check if the order has a payment plan. */\nconst hasPaymentPlan = (order) => {\n  var _a;\n  return hasSubscription(order) && ((_a = order === null || order === void 0 ? void 0 : order.line_items.data) === null || _a === void 0 ? void 0 : _a.some(item => { var _a; return (_a = item === null || item === void 0 ? void 0 : item.price) === null || _a === void 0 ? void 0 : _a.recurring_period_count; }));\n};\n\nexport { hasPaymentPlan as a, convertLineItemsToLineItemData as c, hasSubscription as h, isPriceInOrder as i };\n","const getProcessorData = (processors = [], type, mode) => {\n  var _a;\n  return (_a = (processors || []).find(processor => (processor === null || processor === void 0 ? void 0 : processor.processor_type) === type && (processor === null || processor === void 0 ? void 0 : processor.live_mode) === !!(mode === 'live'))) === null || _a === void 0 ? void 0 : _a.processor_data;\n};\n\nexport { getProcessorData as g };\n","import { r as registerInstance, c as createEvent, h } from './index-430bb51b.js';\nimport { _ as __ } from './default-i18n-c67eee5a.js';\nimport { o as openWormhole } from './consumer-1db89974.js';\nimport { h as hasSubscription } from './index-e534c726.js';\nimport { g as getProcessorData } from './processor-6e16ca02.js';\nimport './_commonjsHelpers-9943807e.js';\n\nconst scPaymentCss = \"sc-payment{display:flex !important;flex-direction:column;gap:var(--sc-input-label-margin);position:relative;font-family:var(--sc-font-sans)}.sc-payment-toggle-summary{line-height:1;display:flex;align-items:center;gap:0.5em}.sc-payment-label{display:flex;justify-content:space-between}.sc-payment-instructions{color:var(--sc-color-gray-600)}.sc-payment__stripe-card-element{display:flex !important;flex-direction:column;gap:var(--sc-input-label-margin);position:relative}\";\n\nconst ScPayment = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.scSetProcessor = createEvent(this, \"scSetProcessor\", 7);\n    /** The current payment method for the payment */\n    this.processor = 'stripe';\n    /** List of available processors. */\n    this.processors = [];\n    /** Is this created in \"test\" mode */\n    this.mode = 'live';\n    /** The currency code. */\n    this.currencyCode = 'usd';\n    /** Default */\n    this.defaultProcessor = 'stripe';\n  }\n  handleOrderChange(_, prev) {\n    if (hasSubscription(this.order) || !this.defaultProcessor) {\n      return setTimeout(() => {\n        this.scSetProcessor.emit('stripe');\n      });\n    }\n    if (!prev) {\n      this.handleDefaultChange();\n    }\n  }\n  handleDefaultChange() {\n    if (this.defaultProcessor) {\n      this.scSetProcessor.emit(this.defaultProcessor);\n    }\n  }\n  componentWillLoad() {\n    this.setProcessors();\n  }\n  /** Set the processors for this order. */\n  setProcessors() {\n    this.stripe = (this.processors || []).find(processor => processor.processor_type === 'stripe' && (processor === null || processor === void 0 ? void 0 : processor.live_mode) === (this.mode === 'live'));\n    this.paypal = (this.processors || []).find(processor => processor.processor_type === 'paypal' && (processor === null || processor === void 0 ? void 0 : processor.live_mode) === (this.mode === 'live'));\n  }\n  /**\n   * Render the payment element.\n   */\n  renderStripePaymentElement() {\n    if (this.stripePaymentElement) {\n      return h(\"sc-order-stripe-payment-element\", { order: this.order, mode: this.mode, processors: this.processors, \"currency-code\": this.currencyCode });\n    }\n    const data = getProcessorData(this.processors, 'stripe', this.mode);\n    return (h(\"div\", { class: \"sc-payment__stripe-card-element\" }, h(\"sc-stripe-element\", { order: this.order, mode: this.mode, publishableKey: data === null || data === void 0 ? void 0 : data.publishable_key, accountId: data === null || data === void 0 ? void 0 : data.account_id, secureText: this.secureNotice }), h(\"sc-secure-notice\", null, this.secureNotice)));\n  }\n  /** Should we show the processor */\n  showProcessor(processor) {\n    var _a;\n    // does the order have a subscription?\n    // If so, it must have a recurring processor.\n    if (hasSubscription(this.order)) {\n      return (_a = processor === null || processor === void 0 ? void 0 : processor.processor_data) === null || _a === void 0 ? void 0 : _a.recurring_enabled;\n    }\n    return true;\n  }\n  renderTestModeBadge() {\n    if (this.hideTestModeBadge)\n      return null;\n    return (this.mode === 'test' && (h(\"sc-tag\", { type: \"warning\", size: \"small\" }, __('Test Mode', 'surecart'))));\n  }\n  /**\n   * Render Stripe and Paypal radio buttons.\n   */\n  renderStripeAndPayPal() {\n    const showPayPal = this.showProcessor(this.paypal);\n    return (h(\"sc-form-control\", { label: this.label }, h(\"div\", { class: \"sc-payment-label\", slot: \"label\" }, h(\"div\", null, this.label), this.renderTestModeBadge()), h(\"sc-toggles\", { collapsible: false, theme: \"container\" }, h(\"sc-toggle\", { \"show-control\": showPayPal, \"show-icon\": showPayPal, shady: true, borderless: true, open: this.processor === 'stripe', onScShow: () => this.scSetProcessor.emit('stripe') }, h(\"span\", { slot: \"summary\", class: \"sc-payment-toggle-summary\" }, h(\"sc-icon\", { name: \"credit-card\", style: { fontSize: '24px' } }), h(\"span\", null, __('Credit Card', 'surecart'))), this.renderStripePaymentElement()), showPayPal && (h(\"sc-toggle\", { \"show-control\": true, shady: true, borderless: true, open: this.processor === 'paypal', onScShow: () => this.scSetProcessor.emit('paypal') }, h(\"span\", { slot: \"summary\", class: \"sc-payment-toggle-summary\" }, h(\"sc-icon\", { name: \"paypal\", style: { width: '80px', fontSize: '24px' } })), h(\"div\", { class: \"sc-payment-instructions\" }, __('You will be prompted by PayPal to complete your purchase securely.', 'surecart')))))));\n  }\n  /**\n   * Render PayPal options.\n   */\n  renderPayPal() {\n    return (h(\"sc-form-control\", { label: this.label }, h(\"div\", { class: \"sc-payment-label\", slot: \"label\" }, h(\"div\", null, this.label), this.renderTestModeBadge()), h(\"sc-toggles\", { collapsible: false, theme: \"container\" }, h(\"sc-toggle\", { \"data-test-id\": \"paypal-credit-card-toggle\", \"show-control\": true, shady: true, borderless: true, open: this.processor === 'paypal-card', onScShow: () => this.scSetProcessor.emit('paypal-card') }, h(\"span\", { slot: \"summary\", class: \"sc-payment-toggle-summary\" }, h(\"sc-icon\", { name: \"credit-card\", style: { fontSize: '24px' } }), h(\"span\", null, __('Credit Card', 'surecart'))), h(\"div\", { class: \"sc-payment-instructions\" }, __('You will be prompted to complete your purchase securely.', 'surecart'))), h(\"sc-toggle\", { \"data-test-id\": \"paypal-toggle\", \"show-control\": true, shady: true, borderless: true, open: this.processor === 'paypal', onScShow: () => this.scSetProcessor.emit('paypal') }, h(\"span\", { slot: \"summary\", class: \"sc-payment-toggle-summary\" }, h(\"sc-icon\", { name: \"paypal\", style: { width: '80px', fontSize: '24px' } })), h(\"div\", { class: \"sc-payment-instructions\" }, __('You will be prompted by PayPal to complete your purchase securely.', 'surecart'))))));\n  }\n  renderLoading() {\n    return (h(\"div\", null, h(\"sc-skeleton\", { style: { width: '10%', marginBottom: '1em' } }), h(\"sc-skeleton\", { style: { width: '100%', marginBottom: '1em' } }), h(\"sc-skeleton\", { style: { width: '35%' } })));\n  }\n  getProcessor() {\n    switch (this.processor) {\n      case 'paypal':\n      case 'paypal-card':\n        return 'paypal';\n      default:\n        return 'stripe';\n    }\n  }\n  renderNoProcessors() {\n    return (h(\"sc-form-control\", { label: this.label }, h(\"sc-alert\", { type: \"info\", open: true }, __('Please contact us for payment', 'surecart'))));\n  }\n  render() {\n    var _a, _b, _c, _d, _e;\n    // no payment is required if we dont have a subscription and the total amount is 0.\n    if (!hasSubscription(this.order)) {\n      if (((_c = (_b = (_a = this.order) === null || _a === void 0 ? void 0 : _a.line_items) === null || _b === void 0 ? void 0 : _b.pagination) === null || _c === void 0 ? void 0 : _c.count) >= 1 && ((_d = this.order) === null || _d === void 0 ? void 0 : _d.total_amount) === 0) {\n        return null;\n      }\n    }\n    // we don't have any processors.\n    if (!((_e = this.processors) === null || _e === void 0 ? void 0 : _e.length)) {\n      console.warn('No processors are configured for this merchant.');\n      return this.renderNoProcessors();\n    }\n    // both stripe and paypal are enabled.\n    if (this.stripe && this.paypal) {\n      return this.renderStripeAndPayPal();\n    }\n    // we have stripe.\n    if (this.stripe) {\n      return (h(\"sc-form-control\", { label: this.label }, h(\"div\", { class: \"sc-payment-label\", slot: \"label\" }, h(\"div\", null, this.label), this.renderTestModeBadge()), this.stripePaymentElement ? h(\"sc-card\", null, this.renderStripePaymentElement()) : this.renderStripePaymentElement()));\n    }\n    // we have paypal.\n    if (this.paypal && this.showProcessor(this.paypal)) {\n      return this.renderPayPal();\n    }\n    console.warn(`No processors are configured for the current cart items and mode. (${this.mode})`);\n    // render no processors message.\n    return this.renderNoProcessors();\n  }\n  static get watchers() { return {\n    \"order\": [\"handleOrderChange\"],\n    \"defaultProcessor\": [\"handleDefaultChange\"],\n    \"processors\": [\"setProcessors\"],\n    \"mode\": [\"setProcessors\"]\n  }; }\n};\nopenWormhole(ScPayment, ['processor', 'processors', 'order', 'mode', 'paymentMethod', 'loading', 'busy', 'currencyCode', 'stripePaymentElement'], false);\nScPayment.style = scPaymentCss;\n\nexport { ScPayment as sc_payment };\n"],"names":["openWormhole","Component","props","isBlocking","Proto","constructor","name","prototype","componentWillLoad","resolve","_this","this","el","g","onOpen","promise","Promise","res","event","CustomEvent","bubbles","composed","detail","consumer","fields","updater","prop","value","dispatchEvent","willLoad","call","then","convertLineItemsToLineItemData","lineItems","data","map","item","price_id","price","id","quantity","isPriceInOrder","order","line_items","find","hasSubscription","_a","_b","_c","length","some","recurring_interval_count","hasPaymentPlan","recurring_period_count","getProcessorData","processors","type","mode","processor","processor_type","live_mode","processor_data","ScPayment","hostRef","r","scSetProcessor","c","currencyCode","defaultProcessor","handleOrderChange","_","prev","h","setTimeout","emit","handleDefaultChange","setProcessors","stripe","paypal","renderStripePaymentElement","stripePaymentElement","class","publishableKey","publishable_key","accountId","account_id","secureText","secureNotice","showProcessor","recurring_enabled","renderTestModeBadge","hideTestModeBadge","size","renderStripeAndPayPal","showPayPal","label","slot","collapsible","theme","shady","borderless","open","onScShow","style","fontSize","width","renderPayPal","renderLoading","marginBottom","getProcessor","renderNoProcessors","render","_d","_e","pagination","count","total_amount","console","warn","watchers","o"],"sourceRoot":""}