{"version":3,"file":"373.js","mappings":"2IACA,MAAMA,EAAiB,CAACC,EAAIC,KACG,IAAIC,OAAOC,sBAAqB,CAACC,EAASC,KACjED,EAAQ,GAAGE,kBAAoB,IACjCL,IACAI,EAASE,UAAUH,EAAQ,GAAGI,QAChC,IAEmBC,QAAQT,EAAG,C,qJCDlC,MAEMU,EAA6B,MACjCC,YAAYC,IACV,IAAAC,GAAiBC,KAAMF,EACzB,CACAG,qBACE,IAAAC,GAAeF,KAAKd,IAAI,KACtBc,KAAKG,OAAO,GAEhB,CACAC,cACE,IACEJ,KAAKK,SAAU,EACfL,KAAKM,qBAAwB,IAAAC,GAAS,CACpCC,MAAM,IAAAD,GAAa,yBAAyBP,KAAKS,aAAc,CAC7DC,OAAQ,CAAC,mBAAoB,kBAAmB,qBAGtD,CACA,MAAOC,IACDA,aAA6B,EAASA,EAAEC,SAC1CZ,KAAKa,MAAQF,EAAEC,QAGfZ,KAAKa,OAAQ,IAAAC,GAAG,uBAAwB,YAE1CC,QAAQF,MAAMb,KAAKa,MACrB,CACA,QACEb,KAAKK,SAAU,CACjB,CACF,CACAW,SACE,OAAQ,IAAAC,GAAE,sBAAuB,CAAEX,SAAUN,KAAKM,SAAUD,QAASL,KAAKK,QAASQ,MAAOb,KAAKa,MAAO,aAAa,IAAAN,GAAanB,OAAO8B,SAASC,KAAM,CAClJC,OAAQ,OACRC,MAAO,WACPC,GAAItB,KAAKS,cAEf,CACIvB,SAAO,OAAO,IAAAqC,GAAWvB,KAAO,GAEtCJ,EAA2B4B,MA1CW,kF","sources":["webpack://sureforms/./node_modules/@surecart/components-react/node_modules/@surecart/components/dist/esm/lazy-64c2bf3b.js","webpack://sureforms/./node_modules/@surecart/components-react/node_modules/@surecart/components/dist/esm/sc-dashboard-customer-details.entry.js"],"sourcesContent":["/** Do something the first time the element is visible */\nconst onFirstVisible = (el, callback) => {\n  const intersectionObserver = new window.IntersectionObserver((entries, observer) => {\n    if (entries[0].intersectionRatio > 0) {\n      callback();\n      observer.unobserve(entries[0].target);\n    }\n  });\n  intersectionObserver.observe(el);\n};\n\nexport { onFirstVisible as o };\n","import { r as registerInstance, h, g as getElement } from './index-430bb51b.js';\nimport { _ as __ } from './default-i18n-c67eee5a.js';\nimport { a as apiFetch } from './fetch-d56a3ec0.js';\nimport { o as onFirstVisible } from './lazy-64c2bf3b.js';\nimport { a as addQueryArgs } from './add-query-args-f4c5962b.js';\nimport './_commonjsHelpers-9943807e.js';\n\nconst scDashboardCustomerDetailsCss = \":host{display:block;position:relative}.customer-details{display:grid;gap:0.75em}\";\n\nconst ScDashboardCustomerDetails = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  componentWillLoad() {\n    onFirstVisible(this.el, () => {\n      this.fetch();\n    });\n  }\n  async fetch() {\n    try {\n      this.loading = true;\n      this.customer = (await await apiFetch({\n        path: addQueryArgs(`surecart/v1/customers/${this.customerId}`, {\n          expand: ['shipping_address', 'billing_address', 'tax_identifier'],\n        }),\n      }));\n    }\n    catch (e) {\n      if (e === null || e === void 0 ? void 0 : e.message) {\n        this.error = e.message;\n      }\n      else {\n        this.error = __('Something went wrong', 'surecart');\n      }\n      console.error(this.error);\n    }\n    finally {\n      this.loading = false;\n    }\n  }\n  render() {\n    return (h(\"sc-customer-details\", { customer: this.customer, loading: this.loading, error: this.error, \"edit-link\": addQueryArgs(window.location.href, {\n        action: 'edit',\n        model: 'customer',\n        id: this.customerId,\n      }) }));\n  }\n  get el() { return getElement(this); }\n};\nScDashboardCustomerDetails.style = scDashboardCustomerDetailsCss;\n\nexport { ScDashboardCustomerDetails as sc_dashboard_customer_details };\n"],"names":["onFirstVisible","el","callback","window","IntersectionObserver","entries","observer","intersectionRatio","unobserve","target","observe","ScDashboardCustomerDetails","constructor","hostRef","r","this","componentWillLoad","o","fetch","async","loading","customer","a","path","customerId","expand","e","message","error","_","console","render","h","location","href","action","model","id","g","style"],"sourceRoot":""}