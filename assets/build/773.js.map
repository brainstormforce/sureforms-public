{"version":3,"file":"773.js","mappings":";mMAyGA,SAASA,EAAoBC,EAAKC,QACX,IAAfA,IAAyBA,EAAa,CAAC,GAC3C,IAAIC,EAAYC,SAASC,cAAc,UAQvC,OAPAF,EAAUG,IAAML,EAChBM,OAAOC,KAAKN,GAAYO,SAAQ,SAAUC,GACtCP,EAAUQ,aAAaD,EAAKR,EAAWQ,IAC3B,mBAARA,GACAP,EAAUQ,aAAa,QAAST,EAAW,kBAEnD,IACOC,CACX,CAkCA,SAASS,EAAWC,EAASC,GAIzB,QAHwB,IAApBA,IAA8BA,EAAkBC,KACpDC,EAAkBH,EAASC,GAEL,oBAAXG,OACP,OAAOH,EAAgBI,QAAQ,MACnC,IAAIC,EAzGR,SAAwBN,GACpB,IAAIO,EAAa,gCACbP,EAAQO,aACRA,EAAaP,EAAQO,kBACdP,EAAQO,YA8DvB,SAA2BP,GACvB,IAAIQ,EAAaR,EAAQ,eAAgBS,EAAiBT,EAAQ,oBAC9DU,EAAgB,GAChBC,EAAoB,GACpBC,MAAMC,QAAQL,GACVA,EAAWM,OAAS,GACpBJ,EAAgB,IAChBC,EAAoBH,EAAWO,YAG/BL,EAAgBF,EAAWO,WAGJ,iBAAfP,GAA2BA,EAAWM,OAAS,EAC3DJ,EAAgBF,EAEe,iBAAnBC,GACZA,EAAeK,OAAS,IACxBJ,EAAgB,IAChBC,EAAoBF,GAExBT,EAAQ,eAAiBU,EACzBV,EAAQ,oBAAsBW,CAElC,CApFIK,CAAkBhB,GAClB,IAwByBiB,EACrBC,EAzBAZ,EAAKZ,OAAOC,KAAKK,GAChBmB,QAAO,SAAUtB,GAClB,YAAgC,IAAjBG,EAAQH,IACF,OAAjBG,EAAQH,IACS,KAAjBG,EAAQH,EAChB,IACKuB,QAAO,SAAUC,EAAaxB,GAC/B,IAAIyB,EAAQtB,EAAQH,GAAKkB,WAOzB,MAN4B,UAAxBlB,EAAI0B,UAAU,EAAG,GACjBF,EAAYG,eAAe3B,GAAOyB,EAGlCD,EAAYI,YAAY5B,GAAOyB,EAE5BD,CACX,GAAG,CACCI,YAAa,CAAC,EACdD,eAAgB,CAAC,IACjBC,EAAcnB,EAAGmB,YAAaD,EAAiBlB,EAAGkB,eACtD,MAAO,CACHpC,IAAK,GAAGsC,OAAOnB,EAAY,KAAKmB,QAIXT,EAJsCQ,EAK3DP,EAAc,GAClBxB,OAAOC,KAAKsB,GAAQrB,SAAQ,SAAUC,GACP,IAAvBqB,EAAYJ,SACZI,GAAe,KACnBA,GAAerB,EAAM,IAAMoB,EAAOpB,EACtC,IACOqB,IAVHM,eAAgBA,EAExB,CA2EaG,CAAe3B,GAAUZ,EAAMkB,EAAGlB,IAAKoC,EAAiBlB,EAAGkB,eAChEI,EAAYJ,EAAe,mBAAqB,SAChDK,EAA0BC,EAAyBF,GAEvD,OA1IJ,SAAoBxC,EAAKC,GACrB,IAAI0C,EAAgBxC,SAASyC,cAAc,eAAgBN,OAAOtC,EAAK,OACvE,GAAsB,OAAlB2C,EACA,OAAO,KACX,IAAIE,EAAa9C,EAAoBC,EAAKC,GAEtC6C,EAAqBH,EAAcI,YAGvC,UAFOD,EAAmBE,QAAQC,QAE9B3C,OAAOC,KAAKuC,EAAmBE,SAAStB,SACxCpB,OAAOC,KAAKsC,EAAWG,SAAStB,OAChC,OAAO,KAEX,IAAIwB,GAAe,EAOnB,OALA5C,OAAOC,KAAKuC,EAAmBE,SAASxC,SAAQ,SAAUC,GAClDqC,EAAmBE,QAAQvC,KAASoC,EAAWG,QAAQvC,KACvDyC,GAAe,EAEvB,IACOA,EAAeP,EAAgB,IAC1C,CAqHQQ,CAAWnD,EAAKoC,IAAmBK,EAC5B5B,EAAgBI,QAAQwB,GAoBvC,SAA0B7B,EAASC,QACP,IAApBA,IAA8BA,EAAkBC,KACpDC,EAAkBH,EAASC,GAC3B,IAAIb,EAAMY,EAAQZ,IAAKC,EAAaW,EAAQX,WAC5C,GAAmB,iBAARD,GAAmC,IAAfA,EAAI0B,OAC/B,MAAM,IAAI0B,MAAM,gBAEpB,QAA0B,IAAfnD,GAAoD,iBAAfA,EAC5C,MAAM,IAAImD,MAAM,wCAEpB,OAAO,IAAIvC,GAAgB,SAAUI,EAASoC,GAE1C,GAAsB,oBAAXrC,OACP,OAAOC,KAtJnB,SAA6BC,GACzB,IAA8CoC,EAAYpC,EAAGoC,UAAWC,EAAUrC,EAAGqC,QACjFrD,EAAYH,EADNmB,EAAGlB,IAAkBkB,EAAGjB,YAElCC,EAAUsD,QAAUD,EACpBrD,EAAUuD,OAASH,EACnBnD,SAASuD,KAAKC,aAAazD,EAAWC,SAASuD,KAAKE,kBACxD,CAiJQC,CAAoB,CAChB7D,IAAKA,EACLC,WAAYA,EACZqD,UAAW,WAAc,OAAOrC,GAAW,EAC3CsC,QAAS,WACL,IAAIO,EAAe,IAAIV,MAAM,eAAgBd,OAAOtC,EAAK,sBACzD,OAAKgB,OAAO+C,MAILA,MAAM/D,GACRgE,MAAK,SAAUC,GAIhB,OAHwB,MAApBA,EAASC,QACTb,EAAOS,GAEJG,EAASE,MACpB,IACKH,MAAK,SAAUI,GAChB,IAAIC,EAlHxB,SAA2BD,GACvB,IAAIE,EAAoBF,EAAQG,MAAM,sBAAsB,GAC5D,OAAOD,EACDA,EAAkBE,QAAQ,MAAO,IAAIA,QAAQ,KAAM,IAAIC,OACvDL,CACV,CA6GuCM,CAAkBN,GACrCf,EAAO,IAAID,MAAMiB,GACrB,IACKM,OAAM,SAAUC,GACjBvB,EAAOuB,EACX,IAhBWvB,EAAOS,EAiBtB,GAER,GACJ,CA3DWe,CAAiB,CACpB7E,IAAKA,EACLC,WAAYmC,GACbvB,GAAiBmD,MAAK,WACrB,IAAIc,EAAqBpC,EAAyBF,GAClD,GAAIsC,EACA,OAAOA,EAEX,MAAM,IAAI1B,MAAM,cAAcd,OAAOE,EAAW,sCACpD,GACJ,CAkDA,SAAS1B,IACL,GAAuB,oBAAZiE,QACP,MAAM,IAAI3B,MAAM,uEAEpB,OAAO2B,OACX,CACA,SAASrC,EAAyBF,GAE9B,OAAOxB,OAAOwB,EAClB,CACA,SAASzB,EAAkBH,EAASC,GAChC,GAAuB,iBAAZD,GAAoC,OAAZA,EAC/B,MAAM,IAAIwC,MAAM,+BAEpB,QAA+B,IAApBvC,GACoB,mBAApBA,EACP,MAAM,IAAIuC,MAAM,6CAExB,SAEA,MAEM4B,EAAkB,MACtBC,YAAYC,IACV,IAAAC,GAAiBC,KAAMF,GACvBE,KAAKC,SAAU,IAAAC,GAAYF,KAAM,UAAW,GAC5CA,KAAKG,YAAa,IAAAD,GAAYF,KAAM,aAAc,GAClDA,KAAKI,QAAS,IAAAF,GAAYF,KAAM,SAAU,GAE1CA,KAAKK,MAAO,EAEZL,KAAKM,QAAU,CAAC,SAAU,QAE1BN,KAAKO,MAAQ,SAEbP,KAAKQ,MAAQ,MACf,CAEAC,mBACE,IAAI3E,EACJ,GAAKkE,KAAKU,UAAaV,KAAKW,WAE5B,IACE,MAAMC,QAAerF,EAAW,CAC9B,YAAayE,KAAKU,SAAStB,QAAQ,KAAM,IACzC,cAAeY,KAAKW,WACpB,QAAU,EACV,OAAS,EACT,UAAmC,QAArB7E,EAAKkE,KAAKa,aAA0B,IAAP/E,OAAgB,EAASA,EAAGgF,SAASC,gBAAkB,QAEpGf,KAAKgB,cAAcJ,EACrB,CACA,MAAOpB,GACLyB,QAAQC,MAAM,0CAA2C1B,EAC3D,CACF,CAEA2B,mBACEnB,KAAKzE,YACP,CAEAyF,cAAcJ,GACZ,MAAMQ,EAAS,CAIbC,QAASZ,MAAOa,EAAGC,KACjB,MAAMC,EAAOxB,KAAKyB,GAAGC,QAAQ,eAE7B,aADsBF,EAAKG,WACVJ,EAAQ1F,UAAY0F,EAAQtD,QAAQ,EAEvD2D,OAAQ,KACN5B,KAAK6B,QAAS,CAAI,EAEpBC,SAAU,KACR9B,KAAKG,WAAW4B,KAAK,SAAS,EAMhCC,YAAavB,SACJ,IAAId,SAAQc,MAAO5E,EAASoC,KACjC,IAAInC,EAAImG,EAER,MAAMC,EAAWlC,KAAKyB,GAAGC,QAAQ,eAE3Bb,QAAeqB,EAASC,SAE9B,OAAItB,aAAiB7C,MACZC,EAAO4C,GAIqD,eAAhEA,aAAqC,EAASA,EAAM/B,QAChDb,EAAO,IAAID,MAAM,6CAGwD,QAA7ElC,EAAK+E,aAAqC,EAASA,EAAMuB,sBAAmC,IAAPtG,OAAgB,EAASA,EAAGuG,oBAC7GxG,EAAsF,QAA7EoG,EAAKpB,aAAqC,EAASA,EAAMuB,sBAAmC,IAAPH,OAAgB,EAASA,EAAGI,qBAGnIrC,KAAKC,QAAQ8B,KAAK,CAAEO,KAAM,yBAA0BtD,SAAS,IAAAsC,GAAG,uDAAwD,cACjHrD,IAAQ,IAOnBsE,UAAW9B,UACT,IAAI3E,EAAImG,EACR,IACE,MAAMO,QAAgB,IAAAC,GAAS,CAC7BC,OAAQ,QACRC,KAAM,+BAAmH,QAAnFV,EAA2B,QAArBnG,EAAKkE,KAAKa,aAA0B,IAAP/E,OAAgB,EAASA,EAAGsG,sBAAmC,IAAPH,OAAgB,EAASA,EAAGW,eAE3J,CAAC,YAAa,WAAWC,SAASL,aAAuC,EAASA,EAAO1D,QAC3FkB,KAAKI,OAAO2B,QAGZ/B,KAAKC,QAAQ8B,KAAK,CAAEO,KAAM,oBAAqBtD,SAAS,IAAAsC,GAAG,iDAAkD,cAC7GtB,KAAKG,WAAW4B,KAAK,UAEzB,CACA,MAAOvC,GACLyB,QAAQC,MAAM1B,GACdQ,KAAKC,QAAQ8B,KAAK,CAAEO,KAAM,oBAAqBtD,SAAS,IAAAsC,GAAG,iDAAkD,cAC7GtB,KAAKG,WAAW4B,KAAK,SACvB,GAMF5D,QAASqB,IACPQ,KAAKC,QAAQ8B,KAAK,CAAEO,KAAM9C,aAAiC,EAASA,EAAI8C,KAAMtD,QAASQ,aAAiC,EAASA,EAAIR,UACrIgB,KAAKG,WAAW4B,KAAK,SAAS,GAGlC,GAAInB,EAAOkC,QAAQC,OAAQ,CACzB,MAAMC,EAAepC,EAAOqC,QAAQ,CAClCC,cAAetC,EAAOkC,QAAQC,OAC9BI,MAAO,CACL5C,MAAOP,KAAKO,MACZC,MAAOR,KAAKQ,UAEXY,IAED4B,EAAaI,cACfJ,EAAaK,OAAOrD,KAAKsD,gBAE7B,CACA,GAAI1C,EAAOkC,QAAQS,KAAM,CACvB,MAAMC,EAAa5C,EAAOqC,QAAQ,CAChCC,cAAetC,EAAOkC,QAAQS,KAC9BJ,MAAO,CACL3C,MAAO,YAENY,IAEDoC,EAAWJ,cACbI,EAAWH,OAAOrD,KAAKyD,cAE3B,CACF,CACAJ,SACE,OAAQ,IAAAK,GAAE,MAAO,CAAEC,MAAO,CAAE,kBAAkB,EAAM,uBAAwB3D,KAAKK,SAAYL,KAAK6B,QAAU7B,KAAKK,QAAS,IAAAqD,GAAE,cAAe,CAAEP,MAAO,CAAE,OAAU,OAAQ,kBAAmB,MAAO,OAAU,WAAa,IAAAO,GAAE,MAAO,CAAEC,MAAO,6BAA8BC,QAAS5D,KAAK6B,QAAU7B,KAAKK,OAAQ,IAAAqD,GAAE,MAAO,CAAEE,QAAS5D,KAAKM,QAAQuC,SAAS,QAASc,MAAO,wBAAyBE,IAAKpC,GAAOzB,KAAKyD,cAAgBhC,KAAQ,IAAAiC,GAAE,MAAO,CAAEE,QAAS5D,KAAKM,QAAQuC,SAAS,UAAWc,MAAO,mBAAoBE,IAAKpC,GAAOzB,KAAKsD,gBAAkB7B,KAC/hB,CACIA,SAAO,OAAO,IAAAqC,GAAW9D,KAAO,GAEtCJ,EAAgBuD,MAvJS","sources":["webpack://sureforms/./node_modules/@surecart/components/dist/esm/sc-paypal-buttons.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, g as getElement } from './index-430bb51b.js';\nimport { _ as __ } from './default-i18n-c67eee5a.js';\nimport { a as apiFetch } from './fetch-d56a3ec0.js';\nimport './_commonjsHelpers-9943807e.js';\nimport './add-query-args-f4c5962b.js';\n\n/*!\n * paypal-js v5.0.4 (2022-04-06T22:09:33.042Z)\n * Copyright 2020-present, PayPal, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction findScript(url, attributes) {\n    var currentScript = document.querySelector(\"script[src=\\\"\".concat(url, \"\\\"]\"));\n    if (currentScript === null)\n        return null;\n    var nextScript = createScriptElement(url, attributes);\n    // ignore the data-uid-auto attribute that gets auto-assigned to every script tag\n    var currentScriptClone = currentScript.cloneNode();\n    delete currentScriptClone.dataset.uidAuto;\n    // check if the new script has the same number of data attributes\n    if (Object.keys(currentScriptClone.dataset).length !==\n        Object.keys(nextScript.dataset).length) {\n        return null;\n    }\n    var isExactMatch = true;\n    // check if the data attribute values are the same\n    Object.keys(currentScriptClone.dataset).forEach(function (key) {\n        if (currentScriptClone.dataset[key] !== nextScript.dataset[key]) {\n            isExactMatch = false;\n        }\n    });\n    return isExactMatch ? currentScript : null;\n}\nfunction insertScriptElement(_a) {\n    var url = _a.url, attributes = _a.attributes, onSuccess = _a.onSuccess, onError = _a.onError;\n    var newScript = createScriptElement(url, attributes);\n    newScript.onerror = onError;\n    newScript.onload = onSuccess;\n    document.head.insertBefore(newScript, document.head.firstElementChild);\n}\nfunction processOptions(options) {\n    var sdkBaseURL = \"https://www.paypal.com/sdk/js\";\n    if (options.sdkBaseURL) {\n        sdkBaseURL = options.sdkBaseURL;\n        delete options.sdkBaseURL;\n    }\n    processMerchantID(options);\n    var _a = Object.keys(options)\n        .filter(function (key) {\n        return (typeof options[key] !== \"undefined\" &&\n            options[key] !== null &&\n            options[key] !== \"\");\n    })\n        .reduce(function (accumulator, key) {\n        var value = options[key].toString();\n        if (key.substring(0, 5) === \"data-\") {\n            accumulator.dataAttributes[key] = value;\n        }\n        else {\n            accumulator.queryParams[key] = value;\n        }\n        return accumulator;\n    }, {\n        queryParams: {},\n        dataAttributes: {},\n    }), queryParams = _a.queryParams, dataAttributes = _a.dataAttributes;\n    return {\n        url: \"\".concat(sdkBaseURL, \"?\").concat(objectToQueryString(queryParams)),\n        dataAttributes: dataAttributes,\n    };\n}\nfunction objectToQueryString(params) {\n    var queryString = \"\";\n    Object.keys(params).forEach(function (key) {\n        if (queryString.length !== 0)\n            queryString += \"&\";\n        queryString += key + \"=\" + params[key];\n    });\n    return queryString;\n}\n/**\n * Parse the error message code received from the server during the script load.\n * This function search for the occurrence of this specific string \"/* Original Error:\".\n *\n * @param message the received error response from the server\n * @returns the content of the message if the string string was found.\n *          The whole message otherwise\n */\nfunction parseErrorMessage(message) {\n    var originalErrorText = message.split(\"/* Original Error:\")[1];\n    return originalErrorText\n        ? originalErrorText.replace(/\\n/g, \"\").replace(\"*/\", \"\").trim()\n        : message;\n}\nfunction createScriptElement(url, attributes) {\n    if (attributes === void 0) { attributes = {}; }\n    var newScript = document.createElement(\"script\");\n    newScript.src = url;\n    Object.keys(attributes).forEach(function (key) {\n        newScript.setAttribute(key, attributes[key]);\n        if (key === \"data-csp-nonce\") {\n            newScript.setAttribute(\"nonce\", attributes[\"data-csp-nonce\"]);\n        }\n    });\n    return newScript;\n}\nfunction processMerchantID(options) {\n    var merchantID = options[\"merchant-id\"], dataMerchantID = options[\"data-merchant-id\"];\n    var newMerchantID = \"\";\n    var newDataMerchantID = \"\";\n    if (Array.isArray(merchantID)) {\n        if (merchantID.length > 1) {\n            newMerchantID = \"*\";\n            newDataMerchantID = merchantID.toString();\n        }\n        else {\n            newMerchantID = merchantID.toString();\n        }\n    }\n    else if (typeof merchantID === \"string\" && merchantID.length > 0) {\n        newMerchantID = merchantID;\n    }\n    else if (typeof dataMerchantID === \"string\" &&\n        dataMerchantID.length > 0) {\n        newMerchantID = \"*\";\n        newDataMerchantID = dataMerchantID;\n    }\n    options[\"merchant-id\"] = newMerchantID;\n    options[\"data-merchant-id\"] = newDataMerchantID;\n    return options;\n}\n\n/**\n * Load the Paypal JS SDK script asynchronously.\n *\n * @param {Object} options - used to configure query parameters and data attributes for the JS SDK.\n * @param {PromiseConstructor} [PromisePonyfill=window.Promise] - optional Promise Constructor ponyfill.\n * @return {Promise<Object>} paypalObject - reference to the global window PayPal object.\n */\nfunction loadScript(options, PromisePonyfill) {\n    if (PromisePonyfill === void 0) { PromisePonyfill = getDefaultPromiseImplementation(); }\n    validateArguments(options, PromisePonyfill);\n    // resolve with null when running in Node\n    if (typeof window === \"undefined\")\n        return PromisePonyfill.resolve(null);\n    var _a = processOptions(options), url = _a.url, dataAttributes = _a.dataAttributes;\n    var namespace = dataAttributes[\"data-namespace\"] || \"paypal\";\n    var existingWindowNamespace = getPayPalWindowNamespace(namespace);\n    // resolve with the existing global paypal namespace when a script with the same params already exists\n    if (findScript(url, dataAttributes) && existingWindowNamespace) {\n        return PromisePonyfill.resolve(existingWindowNamespace);\n    }\n    return loadCustomScript({\n        url: url,\n        attributes: dataAttributes,\n    }, PromisePonyfill).then(function () {\n        var newWindowNamespace = getPayPalWindowNamespace(namespace);\n        if (newWindowNamespace) {\n            return newWindowNamespace;\n        }\n        throw new Error(\"The window.\".concat(namespace, \" global variable is not available.\"));\n    });\n}\n/**\n * Load a custom script asynchronously.\n *\n * @param {Object} options - used to set the script url and attributes.\n * @param {PromiseConstructor} [PromisePonyfill=window.Promise] - optional Promise Constructor ponyfill.\n * @return {Promise<void>} returns a promise to indicate if the script was successfully loaded.\n */\nfunction loadCustomScript(options, PromisePonyfill) {\n    if (PromisePonyfill === void 0) { PromisePonyfill = getDefaultPromiseImplementation(); }\n    validateArguments(options, PromisePonyfill);\n    var url = options.url, attributes = options.attributes;\n    if (typeof url !== \"string\" || url.length === 0) {\n        throw new Error(\"Invalid url.\");\n    }\n    if (typeof attributes !== \"undefined\" && typeof attributes !== \"object\") {\n        throw new Error(\"Expected attributes to be an object.\");\n    }\n    return new PromisePonyfill(function (resolve, reject) {\n        // resolve with undefined when running in Node\n        if (typeof window === \"undefined\")\n            return resolve();\n        insertScriptElement({\n            url: url,\n            attributes: attributes,\n            onSuccess: function () { return resolve(); },\n            onError: function () {\n                var defaultError = new Error(\"The script \\\"\".concat(url, \"\\\" failed to load.\"));\n                if (!window.fetch) {\n                    return reject(defaultError);\n                }\n                // Fetch the error reason from the response body for validation errors\n                return fetch(url)\n                    .then(function (response) {\n                    if (response.status === 200) {\n                        reject(defaultError);\n                    }\n                    return response.text();\n                })\n                    .then(function (message) {\n                    var parseMessage = parseErrorMessage(message);\n                    reject(new Error(parseMessage));\n                })\n                    .catch(function (err) {\n                    reject(err);\n                });\n            },\n        });\n    });\n}\nfunction getDefaultPromiseImplementation() {\n    if (typeof Promise === \"undefined\") {\n        throw new Error(\"Promise is undefined. To resolve the issue, use a Promise polyfill.\");\n    }\n    return Promise;\n}\nfunction getPayPalWindowNamespace(namespace) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return window[namespace];\n}\nfunction validateArguments(options, PromisePonyfill) {\n    if (typeof options !== \"object\" || options === null) {\n        throw new Error(\"Expected an options object.\");\n    }\n    if (typeof PromisePonyfill !== \"undefined\" &&\n        typeof PromisePonyfill !== \"function\") {\n        throw new Error(\"Expected PromisePonyfill to be a function.\");\n    }\n}\n\nconst paypalButtonsCss = \":host{display:block}.paypal-buttons{position:relative}\";\n\nconst ScPaypalButtons = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.scError = createEvent(this, \"scError\", 7);\n    this.scSetState = createEvent(this, \"scSetState\", 7);\n    this.scPaid = createEvent(this, \"scPaid\", 7);\n    /** Is this busy? */\n    this.busy = false;\n    /** Buttons to render */\n    this.buttons = ['paypal', 'card'];\n    /** Label for the button. */\n    this.label = 'paypal';\n    /** Button color. */\n    this.color = 'gold';\n  }\n  /** Load the script */\n  async loadScript() {\n    var _a;\n    if (!this.clientId || !this.merchantId)\n      return;\n    try {\n      const paypal = await loadScript({\n        'client-id': this.clientId.replace(/ /g, ''),\n        'merchant-id': this.merchantId,\n        'commit': false,\n        'vault': true,\n        'currency': ((_a = this.order) === null || _a === void 0 ? void 0 : _a.currency.toUpperCase()) || 'USD',\n      });\n      this.renderButtons(paypal);\n    }\n    catch (err) {\n      console.error('failed to load the PayPal JS SDK script', err);\n    }\n  }\n  /** Load the script on component load. */\n  componentDidLoad() {\n    this.loadScript();\n  }\n  /** Render the buttons. */\n  renderButtons(paypal) {\n    const config = {\n      /**\n       * Validate the form, client-side when the button is clicked.\n       */\n      onClick: async (_, actions) => {\n        const form = this.el.closest('sc-checkout');\n        const isValid = await form.validate();\n        return isValid ? actions.resolve() : actions.reject();\n      },\n      onInit: () => {\n        this.loaded = true;\n      },\n      onCancel: () => {\n        this.scSetState.emit('REJECT');\n      },\n      /**\n       * Create the order.\n       * We finalize the order which generates a payment intent.\n       */\n      createOrder: async () => {\n        return new Promise(async (resolve, reject) => {\n          var _a, _b;\n          // get the checkout component.\n          const checkout = this.el.closest('sc-checkout');\n          // submit and get the finalized order\n          const order = (await checkout.submit());\n          // an error occurred. reject with the error.\n          if (order instanceof Error) {\n            return reject(order);\n          }\n          // assume there was a validation issue here.\n          // that is handled by our fetch function.\n          if ((order === null || order === void 0 ? void 0 : order.status) !== 'finalized') {\n            return reject(new Error('Something went wrong. Please try again.'));\n          }\n          // resolve the payment intent id.\n          if ((_a = order === null || order === void 0 ? void 0 : order.payment_intent) === null || _a === void 0 ? void 0 : _a.external_intent_id) {\n            return resolve((_b = order === null || order === void 0 ? void 0 : order.payment_intent) === null || _b === void 0 ? void 0 : _b.external_intent_id);\n          }\n          // we don't have the correct payment intent for some reason.\n          this.scError.emit({ code: 'missing_payment_intent', message: __('Something went wrong. Please contact us for payment.', 'surecart') });\n          return reject();\n        });\n      },\n      /**\n       * The transaction has been approved.\n       * We can capture it.\n       */\n      onApprove: async () => {\n        var _a, _b;\n        try {\n          const intent = (await apiFetch({\n            method: 'PATCH',\n            path: `surecart/v1/payment_intents/${(_b = (_a = this.order) === null || _a === void 0 ? void 0 : _a.payment_intent) === null || _b === void 0 ? void 0 : _b.id}/capture`,\n          }));\n          if (['succeeded', 'pending'].includes(intent === null || intent === void 0 ? void 0 : intent.status)) {\n            this.scPaid.emit();\n          }\n          else {\n            this.scError.emit({ code: 'could_not_capture', message: __('The payment did not process. Please try again.', 'surecart') });\n            this.scSetState.emit('REJECT');\n          }\n        }\n        catch (err) {\n          console.error(err);\n          this.scError.emit({ code: 'could_not_capture', message: __('The payment did not process. Please try again.', 'surecart') });\n          this.scSetState.emit('REJECT');\n        }\n      },\n      /**\n       * Transaction errored.\n       * @param err\n       */\n      onError: err => {\n        this.scError.emit({ code: err === null || err === void 0 ? void 0 : err.code, message: err === null || err === void 0 ? void 0 : err.message });\n        this.scSetState.emit('REJECT');\n      },\n    };\n    if (paypal.FUNDING.PAYPAL) {\n      const paypalButton = paypal.Buttons({\n        fundingSource: paypal.FUNDING.PAYPAL,\n        style: {\n          label: this.label,\n          color: this.color,\n        },\n        ...config,\n      });\n      if (paypalButton.isEligible()) {\n        paypalButton.render(this.paypalContainer);\n      }\n    }\n    if (paypal.FUNDING.CARD) {\n      const cardButton = paypal.Buttons({\n        fundingSource: paypal.FUNDING.CARD,\n        style: {\n          color: 'black',\n        },\n        ...config,\n      });\n      if (cardButton.isEligible()) {\n        cardButton.render(this.cardContainer);\n      }\n    }\n  }\n  render() {\n    return (h(\"div\", { class: { 'paypal-buttons': true, 'paypal-buttons--busy': this.busy } }, (!this.loaded || this.busy) && h(\"sc-skeleton\", { style: { 'height': '55px', '--border-radius': '4px', 'cursor': 'wait' } }), h(\"div\", { class: \"sc-paypal-button-container\", hidden: !this.loaded || this.busy }, h(\"div\", { hidden: !this.buttons.includes('card'), class: \"sc-paypal-card-button\", ref: el => (this.cardContainer = el) }), h(\"div\", { hidden: !this.buttons.includes('paypal'), class: \"sc-paypal-button\", ref: el => (this.paypalContainer = el) }))));\n  }\n  get el() { return getElement(this); }\n};\nScPaypalButtons.style = paypalButtonsCss;\n\nexport { ScPaypalButtons as sc_paypal_buttons };\n"],"names":["createScriptElement","url","attributes","newScript","document","createElement","src","Object","keys","forEach","key","setAttribute","loadScript","options","PromisePonyfill","getDefaultPromiseImplementation","validateArguments","window","resolve","_a","sdkBaseURL","merchantID","dataMerchantID","newMerchantID","newDataMerchantID","Array","isArray","length","toString","processMerchantID","params","queryString","filter","reduce","accumulator","value","substring","dataAttributes","queryParams","concat","processOptions","namespace","existingWindowNamespace","getPayPalWindowNamespace","currentScript","querySelector","nextScript","currentScriptClone","cloneNode","dataset","uidAuto","isExactMatch","findScript","Error","reject","onSuccess","onError","onerror","onload","head","insertBefore","firstElementChild","insertScriptElement","defaultError","fetch","then","response","status","text","message","parseMessage","originalErrorText","split","replace","trim","parseErrorMessage","catch","err","loadCustomScript","newWindowNamespace","Promise","ScPaypalButtons","constructor","hostRef","r","this","scError","c","scSetState","scPaid","busy","buttons","label","color","async","clientId","merchantId","paypal","order","currency","toUpperCase","renderButtons","console","error","componentDidLoad","config","onClick","_","actions","form","el","closest","validate","onInit","loaded","onCancel","emit","createOrder","_b","checkout","submit","payment_intent","external_intent_id","code","onApprove","intent","a","method","path","id","includes","FUNDING","PAYPAL","paypalButton","Buttons","fundingSource","style","isEligible","render","paypalContainer","CARD","cardButton","cardContainer","h","class","hidden","ref","g"],"sourceRoot":""}