{"version":3,"file":"7089.js","mappings":"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","sources":["webpack://sureforms/./node_modules/@surecart/components/dist/esm/consumer-1db89974.js","webpack://sureforms/./node_modules/@surecart/components/dist/esm/sc-order-detail.entry.js"],"sourcesContent":["import { g as getElement } from './index-430bb51b.js';\n\nvar createDeferredPromise = function () {\n    var resolve;\n    var promise = new Promise(function (res) { resolve = res; });\n    return { promise: promise, resolve: resolve };\n};\n\nvar openWormhole = function (Component, props, isBlocking) {\n    if (isBlocking === void 0) { isBlocking = true; }\n    var isConstructor = (Component.constructor.name === 'Function');\n    var Proto = isConstructor ? Component.prototype : Component;\n    var componentWillLoad = Proto.componentWillLoad;\n    Proto.componentWillLoad = function () {\n        var _this = this;\n        var el = getElement(this);\n        var onOpen = createDeferredPromise();\n        var event = new CustomEvent('openWormhole', {\n            bubbles: true,\n            composed: true,\n            detail: {\n                consumer: this,\n                fields: props,\n                updater: function (prop, value) {\n                    var target = (prop in el) ? el : _this;\n                    target[prop] = value;\n                },\n                onOpen: onOpen,\n            },\n        });\n        el.dispatchEvent(event);\n        var willLoad = function () {\n            if (componentWillLoad) {\n                return componentWillLoad.call(_this);\n            }\n        };\n        return isBlocking ? onOpen.promise.then(function () { return willLoad(); }) : (willLoad());\n    };\n};\n\nexport { openWormhole as o };\n","import { r as registerInstance, h } from './index-430bb51b.js';\nimport { o as openWormhole } from './consumer-1db89974.js';\n\n/**\n * Set a value by a dot path.\n * @param obj The object to evaluate.\n * @param prop The path to be set.\n * @param value The value to set.\n */\nfunction set(obj, prop, value) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tconst setPropImmutableRec = (obj, prop, value, i) => {\n\t\tlet clone, head = prop[i];\n\n\t\tif (prop.length > i) {\n\t\t\tif (Array.isArray(obj)) {\n\t\t\t\thead = getArrayIndex(head, obj);\n\t\t\t\tclone = obj.slice();\n\t\t\t} else {\n\t\t\t\tclone = Object.assign({}, obj);\n\t\t\t}\n\t\t\tclone[head] = setPropImmutableRec(obj[head] !== undefined ? obj[head] : {}, prop, value, i + 1);\n\t\t\treturn clone;\n\t\t}\n\n\t\treturn typeof value === 'function' ? value(obj) : value;\n\t};\n\n\treturn setPropImmutableRec(obj, prop, value, 0);\n}\n\n/**\n * Get a value by a dot path.\n * @param obj The object to evaluate.\n * @param prop The path to value that should be returned.\n * @param [value] The default value that should be returned when the target doesn't exist.\n */\nfunction get(obj, prop, value) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tfor (var i = 0; i < prop.length; i++) {\n\t\tif (obj === null || typeof obj !== 'object') {\n\t\t\treturn value;\n\t\t}\n\t\tlet head = prop[i];\n\t\tif (Array.isArray(obj) && head === '$end') {\n\t\t\thead = obj.length - 1;\n\t\t}\n\t\tobj = obj[head];\n\t}\n\n\tif (typeof obj === 'undefined') {\n\t\treturn value;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Delete a property by a dot path.\n * If target container is an object, the property is deleted.\n * If target container is an array, the index is deleted.\n * If target container is undefined, nothing is deleted.\n * @param obj The object to evaluate.\n * @param prop The path to the property or index that should be deleted.\n */\nfunction _delete(obj, prop) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tconst deletePropImmutableRec = (obj, prop, i) => {\n\t\tlet clone, head = prop[i];\n\n\t\tif (obj === null || typeof obj !== 'object' ||\n\t\t\t!Array.isArray(obj) && obj[head] === undefined) {\n\n\t\t\treturn obj;\n\t\t}\n\n\t\tif (prop.length - 1 > i) {\n\t\t\tif (Array.isArray(obj)) {\n\t\t\t\thead = getArrayIndex(head, obj);\n\t\t\t\tclone = obj.slice();\n\t\t\t} else {\n\t\t\t\tclone = Object.assign({}, obj);\n\t\t\t}\n\n\t\t\tclone[head] = deletePropImmutableRec(obj[head], prop, i + 1);\n\t\t\treturn clone;\n\t\t}\n\n\t\tif (Array.isArray(obj)) {\n\t\t\thead = getArrayIndex(head, obj);\n\t\t\tclone = [].concat(obj.slice(0, head), obj.slice(head + 1));\n\t\t} else {\n\t\t\tclone = Object.assign({}, obj);\n\t\t\tdelete clone[head];\n\t\t}\n\n\t\treturn clone;\n\t};\n\n\treturn deletePropImmutableRec(obj, prop, 0);\n}\n\n/**\n * Toggles a value.  The target value is evaluated using Boolean(currentValue).  The result will always be a JSON boolean.\n * Be careful with strings as target value, as \"true\" and \"false\" will toggle to false, but \"0\" will toggle to true.\n * Here is what Javascript considers false:  0, -0, null, false, NaN, undefined, and the empty string (\"\")\n * @param obj The object to evaluate.\n * @param prop The path to the value.\n */\nfunction toggle(obj, prop) {\n\tconst curVal = get(obj, prop);\n\treturn set(obj, prop, !Boolean(curVal));\n}\n\n/**\n * Merges a value.  The target value must be an object, array, null, or undefined.\n * If target is an object, Object.assign({}, target, param) is used.\n * If target an array, target.concat(param) is used.\n * If target is null or undefined, the value is simply set.\n * @param obj The object to evaluate.\n * @param prop The path to the value.\n * @param val The value to merge into the target value.\n */\nfunction merge(obj, prop, val) {\n\tconst curVal = get(obj, prop);\n\tif (typeof curVal === 'object') {\n\t\tif (Array.isArray(curVal)) {\n\t\t\treturn set(obj, prop, curVal.concat(val));\n\t\t} else if (curVal === null) {\n\t\t\treturn set(obj, prop, val);\n\t\t}\n\t\telse {\n\t\t\tlet merged = Object.assign({}, curVal, val);\n\t\t\treturn set(obj, prop, merged);\n\t\t}\n\t} else if (typeof curVal === 'undefined') {\n\t\treturn set(obj, prop, val);\n\t}\n\telse {\n\t\treturn obj;\n\t}\n}\n\nfunction getArrayIndex(head, obj) {\n\tif (head === '$end') {\n\t\thead = Math.max(obj.length - 1, 0);\n\t}\n\tif (!/^\\+?\\d+$/.test(head)) {\n\t\tthrow new Error(`Array index '${head}' has to be an integer`);\n\t}\n\treturn parseInt(head);\n}\n\nfunction propToArray(prop) {\n\treturn prop.split('.').reduce((ret, el, index, list) => {\n\t\tconst last = index > 0 && list[index - 1];\n\t\tif (last && /(?:^|[^\\\\])\\\\$/.test(last)) {\n\t\t\tconst prev = ret.pop();\n\t\t\tret.push(prev.slice(0, -1) + '.' + el);\n\t\t} else {\n\t\t\tret.push(el);\n\t\t}\n\t\treturn ret;\n\t}, []);\n}\n\nvar lib = {\n\tset,\n\tget,\n\tdelete: _delete,\n\ttoggle,\n\tmerge\n};\n\nconst scOrderDetailCss = \":host{display:block}.order-detail__value{display:block;font-weight:var(--sc-font-weight-semibold);line-height:var(--sc-line-height-dense)}.order-detail__label{display:block;color:var(--sc-color-gray-500);line-height:var(--sc-line-height-dense)}\";\n\nconst ScSessionDetail = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  getPropByPath(object, path, defaultValue) {\n    if (object && path.length)\n      return this.getPropByPath(object[path.shift()], path, defaultValue);\n    return object === undefined ? defaultValue : object;\n  }\n  getValue() {\n    var _a, _b;\n    if (!this.value) {\n      return;\n    }\n    let value = '';\n    // get metadata value\n    if (this.value === 'metadata') {\n      return lib.get((_a = this === null || this === void 0 ? void 0 : this.order) === null || _a === void 0 ? void 0 : _a.metadata, this.value || '');\n    }\n    // get value\n    value = lib.get(this === null || this === void 0 ? void 0 : this.order, this.value || '');\n    // if number, format it\n    if (typeof value === 'number') {\n      value = h(\"sc-format-number\", { type: \"currency\", currency: (_b = this === null || this === void 0 ? void 0 : this.order) === null || _b === void 0 ? void 0 : _b.currency, value: value });\n    }\n    return value;\n  }\n  render() {\n    if (this.loading) {\n      return (h(\"div\", { part: \"base\", class: {\n          'order-detail': true,\n        } }, h(\"span\", { part: \"label\", class: \"order-detail__label\" }, h(\"sc-skeleton\", { style: { width: '60px', height: '8px', display: 'inline-block' } })), h(\"span\", { part: \"value\", class: \"order-detail__value\" }, h(\"sc-skeleton\", { style: { width: '120px', display: 'inline-block' } }))));\n    }\n    const value = this.getValue();\n    if (!value) {\n      if (!this.fallback) {\n        return;\n      }\n    }\n    return (h(\"div\", { part: \"base\", class: {\n        'order-detail': true,\n      } }, h(\"span\", { part: \"label\", class: \"order-detail__label\" }, h(\"slot\", { name: \"label\" }, this.label)), h(\"span\", { part: \"value\", class: \"order-detail__value\" }, h(\"slot\", { name: \"value\" }, value || this.fallback))));\n  }\n};\nopenWormhole(ScSessionDetail, ['order', 'loading'], false);\nScSessionDetail.style = scOrderDetailCss;\n\nexport { ScSessionDetail as sc_order_detail };\n"],"names":["openWormhole","Component","props","isBlocking","Proto","constructor","name","prototype","componentWillLoad","resolve","_this","this","el","g","onOpen","promise","Promise","res","event","CustomEvent","bubbles","composed","detail","consumer","fields","updater","prop","value","dispatchEvent","willLoad","call","then","set","obj","propToArray","toString","setPropImmutableRec","i","clone","head","length","Array","isArray","getArrayIndex","slice","Object","assign","undefined","get","Math","max","test","Error","parseInt","split","reduce","ret","index","list","last","prev","pop","push","lib","delete","deletePropImmutableRec","concat","toggle","curVal","Boolean","merge","val","ScSessionDetail","hostRef","r","getPropByPath","object","path","defaultValue","shift","getValue","_a","_b","order","metadata","h","type","currency","render","loading","part","class","style","width","height","display","fallback","label","o"],"sourceRoot":""}