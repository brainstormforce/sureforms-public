{"version":3,"file":"4290.js","mappings":"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","sources":["webpack://sureforms/./node_modules/@surecart/components-react/node_modules/@surecart/components/dist/esm/lazy-64c2bf3b.js","webpack://sureforms/./node_modules/@surecart/components-react/node_modules/@surecart/components/dist/esm/sc-subscription.entry.js"],"sourcesContent":["/** Do something the first time the element is visible */\nconst onFirstVisible = (el, callback) => {\n  const intersectionObserver = new window.IntersectionObserver((entries, observer) => {\n    if (entries[0].intersectionRatio > 0) {\n      callback();\n      observer.unobserve(entries[0].target);\n    }\n  });\n  intersectionObserver.observe(el);\n};\n\nexport { onFirstVisible as o };\n","import { r as registerInstance, h, g as getElement } from './index-430bb51b.js';\nimport { _ as __, s as sprintf } from './default-i18n-c67eee5a.js';\nimport { a as apiFetch } from './fetch-d56a3ec0.js';\nimport { o as onFirstVisible } from './lazy-64c2bf3b.js';\nimport { a as addQueryArgs } from './add-query-args-f4c5962b.js';\nimport './_commonjsHelpers-9943807e.js';\n\nconst scSubscriptionCss = \":host{display:block}.subscription{display:grid;gap:0.5em}.subscription a{text-decoration:none;font-weight:var(--sc-font-weight-semibold);display:inline-flex;align-items:center;gap:0.25em;color:var(--sc-color-primary-500)}.subscription a.cancel{color:var(--sc-color-danger-500)}\";\n\nconst ScSubscription = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  componentWillLoad() {\n    onFirstVisible(this.el, () => {\n      this.getSubscription();\n    });\n  }\n  async cancelPendingUpdate() {\n    var _a;\n    const r = confirm(__('Are you sure you want to cancel the pending update to your plan?', 'surecart'));\n    if (!r)\n      return;\n    try {\n      this.busy = true;\n      this.subscription = (await apiFetch({\n        path: addQueryArgs(`surecart/v1/subscriptions/${(_a = this.subscription) === null || _a === void 0 ? void 0 : _a.id}/`, { expand: ['price', 'price.product', 'latest_invoice', 'product'] }),\n        method: 'PATCH',\n        data: {\n          purge_pending_update: true,\n        },\n      }));\n    }\n    catch (e) {\n      if (e === null || e === void 0 ? void 0 : e.message) {\n        this.error = e.message;\n      }\n      else {\n        this.error = __('Something went wrong', 'surecart');\n      }\n      console.error(this.error);\n    }\n    finally {\n      this.busy = false;\n    }\n  }\n  /** Get all subscriptions */\n  async getSubscription() {\n    if (this.subscription)\n      return;\n    try {\n      this.loading = true;\n      this.subscription = (await await apiFetch({\n        path: addQueryArgs(`surecart/v1/subscriptions/${this.subscriptionId}`, {\n          expand: ['price', 'price.product', 'latest_invoice'],\n          ...(this.query || {}),\n        }),\n      }));\n    }\n    catch (e) {\n      if (e === null || e === void 0 ? void 0 : e.message) {\n        this.error = e.message;\n      }\n      else {\n        this.error = __('Something went wrong', 'surecart');\n      }\n      console.error(this.error);\n    }\n    finally {\n      this.loading = false;\n    }\n  }\n  renderName(subscription) {\n    var _a, _b, _c;\n    if (typeof ((_a = subscription === null || subscription === void 0 ? void 0 : subscription.price) === null || _a === void 0 ? void 0 : _a.product) !== 'string') {\n      return (_c = (_b = subscription === null || subscription === void 0 ? void 0 : subscription.price) === null || _b === void 0 ? void 0 : _b.product) === null || _c === void 0 ? void 0 : _c.name;\n    }\n    return __('Subscription', 'surecart');\n  }\n  renderRenewalText(subscription) {\n    const tag = h(\"sc-subscription-status-badge\", { subscription: subscription });\n    if ((subscription === null || subscription === void 0 ? void 0 : subscription.cancel_at_period_end) && subscription.current_period_end_at) {\n      return (h(\"span\", null, tag, \" \", sprintf(__('Your plan will be canceled on', 'surecart')), ' ', h(\"sc-format-date\", { date: subscription.current_period_end_at * 1000, month: \"long\", day: \"numeric\", year: \"numeric\" })));\n    }\n    if (subscription.status === 'trialing' && subscription.trial_end_at) {\n      return (h(\"span\", null, tag, \" \", sprintf(__('Your plan begins on', 'surecart')), \" \", h(\"sc-format-date\", { date: subscription.trial_end_at * 1000, month: \"long\", day: \"numeric\", year: \"numeric\" })));\n    }\n    if (subscription.status === 'active' && subscription.current_period_end_at) {\n      return (h(\"span\", null, tag, \" \", sprintf(__('Your plan renews on', 'surecart')), ' ', h(\"sc-format-date\", { date: subscription.current_period_end_at * 1000, month: \"long\", day: \"numeric\", year: \"numeric\" })));\n    }\n    return tag;\n  }\n  renderEmpty() {\n    return h(\"slot\", { name: \"empty\" }, __('This subscription does not exist.', 'surecart'));\n  }\n  renderLoading() {\n    return (h(\"sc-stacked-list-row\", { style: { '--columns': '2' }, \"mobile-size\": 0 }, h(\"div\", { style: { padding: '0.5em' } }, h(\"sc-skeleton\", { style: { width: '30%', marginBottom: '0.75em' } }), h(\"sc-skeleton\", { style: { width: '20%', marginBottom: '0.75em' } }), h(\"sc-skeleton\", { style: { width: '40%' } }))));\n  }\n  renderContent() {\n    if (this.loading) {\n      return this.renderLoading();\n    }\n    if (!this.subscription) {\n      return this.renderEmpty();\n    }\n    return (h(\"sc-stacked-list-row\", { \"mobile-size\": 0 }, h(\"sc-subscription-details\", { subscription: this.subscription })));\n  }\n  render() {\n    var _a, _b, _c, _d;\n    return (h(\"sc-dashboard-module\", { heading: this.heading || __('Current Plan', 'surecart'), class: \"subscription\", error: this.error }, !!this.subscription && (h(\"sc-flex\", { slot: \"end\" }, !!Object.keys((_a = this.subscription) === null || _a === void 0 ? void 0 : _a.pending_update).length && (h(\"sc-button\", { type: \"link\", onClick: () => this.cancelPendingUpdate() }, h(\"sc-icon\", { name: \"x-octagon\", slot: \"prefix\" }), __('Cancel Scheduled Update', 'surecart'))), ((_b = this === null || this === void 0 ? void 0 : this.subscription) === null || _b === void 0 ? void 0 : _b.cancel_at_period_end) ? (h(\"sc-button\", { type: \"link\", href: addQueryArgs(window.location.href, {\n        action: 'renew',\n      }) }, h(\"sc-icon\", { name: \"repeat\", slot: \"prefix\" }), __('Renew Plan', 'surecart'))) : (((_c = this.subscription) === null || _c === void 0 ? void 0 : _c.status) !== 'canceled' &&\n      ((_d = this.subscription) === null || _d === void 0 ? void 0 : _d.current_period_end_at) &&\n      this.showCancel && (h(\"sc-button\", { type: \"link\", href: addQueryArgs(window.location.href, {\n        action: 'cancel',\n      }) }, h(\"sc-icon\", { name: \"x\", slot: \"prefix\" }), __('Cancel Plan', 'surecart')))))), h(\"sc-card\", { \"no-padding\": true, style: { '--overflow': 'hidden' } }, h(\"sc-stacked-list\", null, this.renderContent())), this.busy && h(\"sc-block-ui\", { spinner: true })));\n  }\n  get el() { return getElement(this); }\n};\nScSubscription.style = scSubscriptionCss;\n\nexport { ScSubscription as sc_subscription };\n"],"names":["onFirstVisible","el","callback","window","IntersectionObserver","entries","observer","intersectionRatio","unobserve","target","observe","ScSubscription","constructor","hostRef","r","this","componentWillLoad","o","getSubscription","async","_a","confirm","_","busy","subscription","a","path","id","expand","method","data","purge_pending_update","e","message","error","console","loading","subscriptionId","query","renderName","_b","_c","price","product","name","renderRenewalText","tag","h","cancel_at_period_end","current_period_end_at","s","date","month","day","year","status","trial_end_at","renderEmpty","renderLoading","style","padding","width","marginBottom","renderContent","render","_d","heading","class","slot","Object","keys","pending_update","length","type","onClick","cancelPendingUpdate","href","location","action","showCancel","spinner","g"],"sourceRoot":""}