@import "./variables.scss";

@mixin srfm-block-label-styles {
	font-size: var( --srfm-label-font-size );
	font-weight: var( --srfm-label-font-weight );
	line-height: var( --srfm-label-line-height );
	color: var( --srfm-color-input-label );
	word-wrap: break-word;
}

@mixin srfm-input-common-styles( $important: false ) {
	@if $important {
		font-size: var( --srfm-input-field-font-size ) !important;
		font-weight: var( --srfm-input-field-font-weight ) !important;
		padding: var( --srfm-input-field-padding ) !important;
		line-height: var( --srfm-input-field-line-height ) !important;
		color: var( --srfm-color-input-text ) !important;
		border: var( --srfm-color-input-border ) solid 1px !important;
		border-radius: var( --srfm-input-field-border-radius ) !important;
		background-color: var( --srfm-color-input-background ) !important;
		height: var( --srfm-input-height ) !important;
		outline: 0 !important;
		margin: var( --srfm-input-field-margin ) !important;
	} @else {
		font-size: var( --srfm-input-field-font-size );
		font-weight: var( --srfm-input-field-font-weight );
		padding: var( --srfm-input-field-padding );
		line-height: var( --srfm-input-field-line-height );
		color: var( --srfm-color-input-text );
		border: var( --srfm-color-input-border ) solid 1px;
		border-radius: var( --srfm-input-field-border-radius );
		background-color: var( --srfm-color-input-background );
		height: var( --srfm-input-height );
		outline: 0;
		margin: var( --srfm-input-field-margin );
	}

	&::placeholder {
		color: var( --srfm-color-input-placeholder );
	}
}

@mixin srfm-description-styles {
	font-size: var( --srfm-description-font-size );
	font-weight: var( --srfm-description-font-weight );
	line-height: var( --srfm-description-line-height );
	color: var( --srfm-color-input-description );
	margin-top: var( --srfm-description-margin-top );
}

@mixin srfm-address-block-styles {
	display: flex;
	flex-wrap: wrap;
	gap: var( --srfm-row-gap-between-fields ) var( --srfm-col-gap-between-fields );

	// Adjusting the width according to the block width and added gap.
	.srfm-block-width-100 {
		flex: 0 1 100%;
	}
	.srfm-block-width-50 {
		flex: 0 1 calc( 50% - var( --srfm-col-gap-between-fields ) / 2 );
	}
	.srfm-block-width-33-33 {
		flex: 0 1 calc( 33.33% - ( 2 / 3 ) * var( --srfm-col-gap-between-fields ) );
	}
	.srfm-block-width-25 {
		flex: 0 1 calc( 25% - ( 3 / 4 ) * var( --srfm-col-gap-between-fields ) );
	}
}

@mixin srfm-no-margin-padding {
	margin: 0 !important;
	padding: 0 !important;
}

// These mixins are used in Multi Select scss.
@mixin srfm-multi-choice-wrap-styles {
	display: flex;
	flex-wrap: wrap;
	margin: 0 -4px;

	@media ( min-width: 431px ) {
		&.srfm-choice-width-100 {
			.srfm-multi-choice-single {
				width: 100%;
			}
		}

		&.srfm-choice-width-50 {
			.srfm-multi-choice-single {
				width: 50%;
			}
		}

		&.srfm-choice-width-33-33 {
			.srfm-multi-choice-single {
				width: 33%;
			}
		}

		&.srfm-choice-width-25 {
			.srfm-multi-choice-single {
				width: 25%;
			}
		}
	}
}

@mixin srfm-multi-choice-vertical-layout( $important: false ) {
	&.srfm-vertical-layout {
		.srfm-block-content-wrap {
			@if $important {
				padding: 16px !important;
				height: 100% !important;
			} @else {
				padding: 16px;
				height: 100%;
			}

			.srfm-icon {
				position: absolute !important;
				top: 4px !important;
				right: 4px !important;
			}

			p {
				text-align: center;
			}
		}
	}
}

@mixin srfm-multi-choice-single-styles {
	padding: 4px;
	cursor: pointer;
	margin: 0;
}

@mixin srfm-multi-choice-block-content-wrap-styles( $important: false ) {
	position: relative;
	@if $important {
		@include srfm-input-common-styles( true );
		margin: 0 !important;
		min-height: var( --srfm-input-height );
		height: auto !important;
	} @else {
		@include srfm-input-common-styles();
		margin: 0;
		min-height: var( --srfm-input-height );
		height: auto;
	}

	p {
		font-size: 1em;
		line-height: normal;
		width: calc( 100% - 1em );
		margin-top: 0;
		margin-bottom: 0;
		word-break: break-word;
	}
}

@mixin srfm-multi-choice-icon-styles {
	float: right;
	position: relative;
	width: 16px;
	height: 16px;
	top: 1px;

	svg {
		position: absolute;
		top: 0;
		path {
			stroke: var( --srfm-color-multi-choice-svg );
			stroke-opacity: 0.7;
		}
	}
}
