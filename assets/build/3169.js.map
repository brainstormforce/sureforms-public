{"version":3,"file":"3169.js","mappings":"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","sources":["webpack://sureforms/./node_modules/@surecart/components/dist/esm/add-query-args-f4c5962b.js","webpack://sureforms/./node_modules/@surecart/components/dist/esm/price-ca142cc6.js","webpack://sureforms/./node_modules/@surecart/components/dist/esm/sc-subscription-ad-hoc-confirm.entry.js"],"sourcesContent":["/**\n * Returns the query string part of the URL.\n *\n * @param {string} url The full URL.\n *\n * @example\n * ```js\n * const queryString = getQueryString( 'http://localhost:8080/this/is/a/test?query=true#fragment' ); // 'query=true'\n * ```\n *\n * @return {string|void} The query string part of the URL.\n */\nfunction getQueryString(url) {\n  let query;\n\n  try {\n    query = new URL(url, 'http://example.com').search.substring(1);\n  } catch (error) {}\n\n  if (query) {\n    return query;\n  }\n}\n\n/**\n * Generates URL-encoded query string using input query data.\n *\n * It is intended to behave equivalent as PHP's `http_build_query`, configured\n * with encoding type PHP_QUERY_RFC3986 (spaces as `%20`).\n *\n * @example\n * ```js\n * const queryString = buildQueryString( {\n *    simple: 'is ok',\n *    arrays: [ 'are', 'fine', 'too' ],\n *    objects: {\n *       evenNested: {\n *          ok: 'yes',\n *       },\n *    },\n * } );\n * // \"simple=is%20ok&arrays%5B0%5D=are&arrays%5B1%5D=fine&arrays%5B2%5D=too&objects%5BevenNested%5D%5Bok%5D=yes\"\n * ```\n *\n * @param {Record<string,*>} data Data to encode.\n *\n * @return {string} Query string.\n */\nfunction buildQueryString(data) {\n  let string = '';\n  const stack = Object.entries(data);\n  let pair;\n\n  while (pair = stack.shift()) {\n    let [key, value] = pair; // Support building deeply nested data, from array or object values.\n\n    const hasNestedData = Array.isArray(value) || value && value.constructor === Object;\n\n    if (hasNestedData) {\n      // Push array or object values onto the stack as composed of their\n      // original key and nested index or key, retaining order by a\n      // combination of Array#reverse and Array#unshift onto the stack.\n      const valuePairs = Object.entries(value).reverse();\n\n      for (const [member, memberValue] of valuePairs) {\n        stack.unshift([`${key}[${member}]`, memberValue]);\n      }\n    } else if (value !== undefined) {\n      // Null is treated as special case, equivalent to empty string.\n      if (value === null) {\n        value = '';\n      }\n\n      string += '&' + [key, value].map(encodeURIComponent).join('=');\n    }\n  } // Loop will concatenate with leading `&`, but it's only expected for all\n  // but the first query parameter. This strips the leading `&`, while still\n  // accounting for the case that the string may in-fact be empty.\n\n\n  return string.substr(1);\n}\n\n/**\n * Internal dependencies\n */\n/** @typedef {import('./get-query-arg').QueryArgParsed} QueryArgParsed */\n\n/**\n * @typedef {Record<string,QueryArgParsed>} QueryArgs\n */\n\n/**\n * Sets a value in object deeply by a given array of path segments. Mutates the\n * object reference.\n *\n * @param {Record<string,*>} object Object in which to assign.\n * @param {string[]}         path   Path segment at which to set value.\n * @param {*}                value  Value to set.\n */\n\nfunction setPath(object, path, value) {\n  const length = path.length;\n  const lastIndex = length - 1;\n\n  for (let i = 0; i < length; i++) {\n    let key = path[i];\n\n    if (!key && Array.isArray(object)) {\n      // If key is empty string and next value is array, derive key from\n      // the current length of the array.\n      key = object.length.toString();\n    } // If the next key in the path is numeric (or empty string), it will be\n    // created as an array. Otherwise, it will be created as an object.\n\n\n    const isNextKeyArrayIndex = !isNaN(Number(path[i + 1]));\n    object[key] = i === lastIndex ? // If at end of path, assign the intended value.\n    value : // Otherwise, advance to the next object in the path, creating\n    // it if it does not yet exist.\n    object[key] || (isNextKeyArrayIndex ? [] : {});\n\n    if (Array.isArray(object[key]) && !isNextKeyArrayIndex) {\n      // If we current key is non-numeric, but the next value is an\n      // array, coerce the value to an object.\n      object[key] = { ...object[key]\n      };\n    } // Update working reference object to the next in the path.\n\n\n    object = object[key];\n  }\n}\n/**\n * Returns an object of query arguments of the given URL. If the given URL is\n * invalid or has no querystring, an empty object is returned.\n *\n * @param {string} url URL.\n *\n * @example\n * ```js\n * const foo = getQueryArgs( 'https://wordpress.org?foo=bar&bar=baz' );\n * // { \"foo\": \"bar\", \"bar\": \"baz\" }\n * ```\n *\n * @return {QueryArgs} Query args object.\n */\n\n\nfunction getQueryArgs(url) {\n  return (getQueryString(url) || '' // Normalize space encoding, accounting for PHP URL encoding\n  // corresponding to `application/x-www-form-urlencoded`.\n  //\n  // See: https://tools.ietf.org/html/rfc1866#section-8.2.1\n  ).replace(/\\+/g, '%20').split('&').reduce((accumulator, keyValue) => {\n    const [key, value = ''] = keyValue.split('=') // Filtering avoids decoding as `undefined` for value, where\n    // default is restored in destructuring assignment.\n    .filter(Boolean).map(decodeURIComponent);\n\n    if (key) {\n      const segments = key.replace(/\\]/g, '').split('[');\n      setPath(accumulator, segments, value);\n    }\n\n    return accumulator;\n  }, {});\n}\n\n/**\n * Internal dependencies\n */\n/**\n * Appends arguments as querystring to the provided URL. If the URL already\n * includes query arguments, the arguments are merged with (and take precedent\n * over) the existing set.\n *\n * @param {string} [url=''] URL to which arguments should be appended. If omitted,\n *                          only the resulting querystring is returned.\n * @param {Object} [args]   Query arguments to apply to URL.\n *\n * @example\n * ```js\n * const newURL = addQueryArgs( 'https://google.com', { q: 'test' } ); // https://google.com/?q=test\n * ```\n *\n * @return {string} URL with arguments applied.\n */\n\nfunction addQueryArgs() {\n  let url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let args = arguments.length > 1 ? arguments[1] : undefined;\n\n  // If no arguments are to be appended, return original URL.\n  if (!args || !Object.keys(args).length) {\n    return url;\n  }\n\n  let baseUrl = url; // Determine whether URL already had query arguments.\n\n  const queryStringIndex = url.indexOf('?');\n\n  if (queryStringIndex !== -1) {\n    // Merge into existing query arguments.\n    args = Object.assign(getQueryArgs(url), args); // Change working base URL to omit previous query arguments.\n\n    baseUrl = baseUrl.substr(0, queryStringIndex);\n  }\n\n  return baseUrl + '?' + buildQueryString(args);\n}\n\nexport { addQueryArgs as a, buildQueryString as b, getQueryArgs as g };\n","import { _ as __, s as sprintf, a as _n } from './default-i18n-c67eee5a.js';\n\nconst convertAmount = (amount, currency) => {\n  return ['bif', 'clp', 'djf', 'gnf', 'jpy', 'kmf', 'krw'].includes(currency) ? amount : amount / 100;\n};\nconst getHumanDiscount = (coupon) => {\n  if (coupon.amount_off && coupon.currency) {\n    return getFormattedPrice({ amount: coupon.amount_off, currency: coupon.currency });\n  }\n  if (coupon.percent_off) {\n    // TODO: Translators.\n    return `${coupon.percent_off | 0}% off`;\n  }\n  return '';\n};\nconst getFormattedPrice = ({ amount, currency }) => {\n  const converted = convertAmount(amount, currency);\n  return `${new Intl.NumberFormat(undefined, {\n    style: 'currency',\n    currency: currency,\n  }).format(parseFloat(converted.toFixed(2)))}`;\n};\n// get the currency symbol for a currency code.\nconst getCurrencySymbol = (code = 'usd') => {\n  const [currency] = new Intl.NumberFormat(undefined, {\n    style: 'currency',\n    currency: code,\n  }).formatToParts();\n  return currency === null || currency === void 0 ? void 0 : currency.value;\n};\nconst translateInterval = (amount, interval, prefix = __('every', 'surecart'), fallback = __('once', 'surecart'), showSingle = false) => {\n  switch (interval) {\n    case 'day':\n      return `${prefix} ${sprintf(showSingle ? _n('%d day', '%d days', amount, 'surecart') : _n('day', '%d days', amount, 'surecart'), amount)}`;\n    case 'week':\n      return `${prefix} ${sprintf(showSingle ? _n('%d week', '%d weeks', amount, 'surecart') : _n('week', '%d weeks', amount, 'surecart'), amount)}`;\n    case 'month':\n      return `${prefix} ${sprintf(showSingle ? _n('%d month', '%d months', amount, 'surecart') : _n('month', '%d months', amount, 'surecart'), amount)}`;\n    case 'year':\n      return `${prefix} ${sprintf(showSingle ? _n('%d year', '%d years', amount, 'surecart') : _n('year', '%d years', amount, 'surecart'), amount)}`;\n    default:\n      return fallback;\n  }\n};\nconst intervalString = (price, options = {}) => {\n  if (!price) {\n    return '';\n  }\n  const { showOnce, labels } = options;\n  const { interval = __('every', 'surecart'), period = __('for', 'surecart') } = labels || {};\n  return `${intervalCountString(price, interval, !!showOnce ? __('once', 'surecart') : '')} ${periodCountString(price, period)}`;\n};\nconst intervalCountString = (price, prefix, fallback = __('once', 'surecart')) => {\n  if (!price.recurring_interval_count || !price.recurring_interval) {\n    return '';\n  }\n  return translateInterval(price.recurring_interval_count, price.recurring_interval, ` ${prefix}`, fallback);\n};\nconst periodCountString = (price, prefix, fallback = '') => {\n  if (!(price === null || price === void 0 ? void 0 : price.recurring_period_count) || !(price === null || price === void 0 ? void 0 : price.recurring_interval)) {\n    return '';\n  }\n  return translateInterval(((price === null || price === void 0 ? void 0 : price.recurring_period_count) || 0) * (price === null || price === void 0 ? void 0 : price.recurring_interval_count), price === null || price === void 0 ? void 0 : price.recurring_interval, ` ${prefix}`, fallback, true);\n};\n\nexport { getCurrencySymbol as a, getHumanDiscount as g, intervalString as i, translateInterval as t };\n","import { r as registerInstance, h } from './index-430bb51b.js';\nimport { _ as __ } from './default-i18n-c67eee5a.js';\nimport { i as intervalString } from './price-ca142cc6.js';\nimport { a as addQueryArgs } from './add-query-args-f4c5962b.js';\nimport './_commonjsHelpers-9943807e.js';\n\nconst scSubscriptionAdHocConfirmCss = \":host{display:block}\";\n\nconst ScSubscriptionAdHocConfirm = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.busy = false;\n  }\n  async handleSubmit(e) {\n    const { ad_hoc_amount } = await e.target.getFormJson();\n    this.busy = true;\n    return window.location.assign(addQueryArgs(window.location.href, {\n      action: 'confirm',\n      ad_hoc_amount,\n    }));\n  }\n  render() {\n    return (h(\"sc-dashboard-module\", { heading: this.heading || __('Enter An Amount', 'surecart'), class: \"subscription-switch\" }, h(\"sc-card\", null, h(\"sc-form\", { onScSubmit: e => this.handleSubmit(e) }, h(\"sc-price-input\", { label: \"Amount\", name: \"ad_hoc_amount\", autofocus: true, required: true }, h(\"span\", { slot: \"suffix\", style: { opacity: '0.75' } }, intervalString(this.price))), h(\"sc-button\", { type: \"primary\", full: true, submit: true, loading: this.busy }, __('Next', 'surecart'), \" \", h(\"sc-icon\", { name: \"arrow-right\", slot: \"suffix\" })))), this.busy && h(\"sc-block-ui\", { style: { zIndex: '9' } })));\n  }\n};\nScSubscriptionAdHocConfirm.style = scSubscriptionAdHocConfirmCss;\n\nexport { ScSubscriptionAdHocConfirm as sc_subscription_ad_hoc_confirm };\n"],"names":["buildQueryString","data","string","stack","Object","entries","pair","shift","key","value","Array","isArray","constructor","valuePairs","reverse","member","memberValue","unshift","undefined","map","encodeURIComponent","join","substr","getQueryArgs","url","query","URL","search","substring","error","getQueryString","replace","split","reduce","accumulator","keyValue","filter","Boolean","decodeURIComponent","object","path","length","lastIndex","i","toString","isNextKeyArrayIndex","isNaN","Number","setPath","addQueryArgs","arguments","args","keys","baseUrl","queryStringIndex","indexOf","assign","getHumanDiscount","coupon","amount_off","currency","getFormattedPrice","amount","percent_off","converted","includes","convertAmount","Intl","NumberFormat","style","format","parseFloat","toFixed","getCurrencySymbol","code","formatToParts","translateInterval","interval","prefix","_","fallback","showSingle","s","intervalString","price","options","showOnce","labels","period","intervalCountString","periodCountString","recurring_interval_count","recurring_interval","recurring_period_count","ScSubscriptionAdHocConfirm","hostRef","r","this","busy","async","e","ad_hoc_amount","target","getFormJson","window","location","a","href","action","render","h","heading","class","onScSubmit","handleSubmit","label","name","autofocus","required","slot","opacity","type","full","submit","loading","zIndex"],"sourceRoot":""}