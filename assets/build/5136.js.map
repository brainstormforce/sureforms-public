{"version":3,"file":"5136.js","mappings":"0JAQIA,EAAe,SAAUC,EAAWC,EAAOC,QACxB,IAAfA,IAAyBA,GAAa,GAC1C,IACIC,EADgD,aAA/BH,EAAUI,YAAYC,KACfL,EAAUM,UAAYN,EAC9CO,EAAoBJ,EAAMI,kBAC9BJ,EAAMI,kBAAoB,WACtB,IAXAC,EAWIC,EAAQC,KACRC,GAAK,IAAAC,GAAWF,MAChBG,EAXD,CAAEC,QADK,IAAIC,SAAQ,SAAUC,GAAOR,EAAUQ,CAAK,IAC/BR,QAASA,GAY5BS,EAAQ,IAAIC,YAAY,eAAgB,CACxCC,SAAS,EACTC,UAAU,EACVC,OAAQ,CACJC,SAAUZ,KACVa,OAAQtB,EACRuB,QAAS,SAAUC,EAAMC,IACPD,KAAQd,EAAMA,EAAKF,GAC1BgB,GAAQC,CACnB,EACAb,OAAQA,KAGhBF,EAAGgB,cAAcV,GACjB,IAAIW,EAAW,WACX,GAAIrB,EACA,OAAOA,EAAkBsB,KAAKpB,EAEtC,EACA,OAAOP,EAAaW,EAAOC,QAAQgB,MAAK,WAAc,OAAOF,GAAY,IAAMA,GACnF,CACJ,C,oICjCA,MAEMG,EAA8B,MAClC3B,YAAY4B,IACV,IAAAC,GAAiBvB,KAAMsB,EACzB,CACAE,SACE,OAAKxB,KAAKyB,UAGF,IAAAC,GAAE,sBAAuB,CAAED,SAAUzB,KAAKyB,SAAUE,QAAS3B,KAAK2B,QAASC,MAAO5B,KAAK4B,QAAS,IAAAF,GAAE,OAAQ,CAAEG,KAAM,YAAa,IAAAH,GAAE,OAAQ,CAAE/B,KAAM,WAAaK,KAAK8B,UAAW,IAAAC,GAAG,kBAAmB,eAFnM,IAGX,IAEF,IAAAC,GAAaX,EAA6B,CAAC,QAAS,WAAY,YAAY,GAC5EA,EAA4BY,MAdW,sB","sources":["webpack://sureforms/./node_modules/@surecart/components-react/node_modules/@surecart/components/dist/esm/consumer-1db89974.js","webpack://sureforms/./node_modules/@surecart/components-react/node_modules/@surecart/components/dist/esm/sc-order-confirmation-customer.entry.js"],"sourcesContent":["import { g as getElement } from './index-430bb51b.js';\n\nvar createDeferredPromise = function () {\n    var resolve;\n    var promise = new Promise(function (res) { resolve = res; });\n    return { promise: promise, resolve: resolve };\n};\n\nvar openWormhole = function (Component, props, isBlocking) {\n    if (isBlocking === void 0) { isBlocking = true; }\n    var isConstructor = (Component.constructor.name === 'Function');\n    var Proto = isConstructor ? Component.prototype : Component;\n    var componentWillLoad = Proto.componentWillLoad;\n    Proto.componentWillLoad = function () {\n        var _this = this;\n        var el = getElement(this);\n        var onOpen = createDeferredPromise();\n        var event = new CustomEvent('openWormhole', {\n            bubbles: true,\n            composed: true,\n            detail: {\n                consumer: this,\n                fields: props,\n                updater: function (prop, value) {\n                    var target = (prop in el) ? el : _this;\n                    target[prop] = value;\n                },\n                onOpen: onOpen,\n            },\n        });\n        el.dispatchEvent(event);\n        var willLoad = function () {\n            if (componentWillLoad) {\n                return componentWillLoad.call(_this);\n            }\n        };\n        return isBlocking ? onOpen.promise.then(function () { return willLoad(); }) : (willLoad());\n    };\n};\n\nexport { openWormhole as o };\n","import { r as registerInstance, h } from './index-430bb51b.js';\nimport { _ as __ } from './default-i18n-c67eee5a.js';\nimport { o as openWormhole } from './consumer-1db89974.js';\nimport './_commonjsHelpers-9943807e.js';\n\nconst scOrderConfirmationCustomerCss = \":host{display:block}\";\n\nconst ScOrderConfirmationCustomer = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  render() {\n    if (!this.customer) {\n      return null;\n    }\n    return (h(\"sc-customer-details\", { customer: this.customer, loading: this.loading, error: this.error }, h(\"span\", { slot: \"heading\" }, h(\"slot\", { name: \"heading\" }, this.heading || __('Billing Details', 'surecart')))));\n  }\n};\nopenWormhole(ScOrderConfirmationCustomer, ['order', 'customer', 'loading'], false);\nScOrderConfirmationCustomer.style = scOrderConfirmationCustomerCss;\n\nexport { ScOrderConfirmationCustomer as sc_order_confirmation_customer };\n"],"names":["openWormhole","Component","props","isBlocking","Proto","constructor","name","prototype","componentWillLoad","resolve","_this","this","el","g","onOpen","promise","Promise","res","event","CustomEvent","bubbles","composed","detail","consumer","fields","updater","prop","value","dispatchEvent","willLoad","call","then","ScOrderConfirmationCustomer","hostRef","r","render","customer","h","loading","error","slot","heading","_","o","style"],"sourceRoot":""}