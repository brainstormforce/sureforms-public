{"version":3,"file":"8465.js","mappings":"2KAEA,MAAMA,EAAa,MACjBC,YAAYC,IACV,IAAAC,GAAiBC,KAAMF,GACvBE,KAAKC,cAAe,IAAAC,GAAYF,KAAM,gBAAiB,GACvDA,KAAKG,WAAaC,MAAOC,IACvBL,KAAKK,QAAUA,EACRL,KAAKM,SAEdN,KAAKM,QAAU,IAAIC,SAAQC,IACzBR,KAAKS,eAAiBD,CAAO,GAEjC,CACAE,oBACEV,KAAKC,aAAaU,KAAKX,KAAKG,WAC9B,CACAS,uBACEZ,KAAKS,gBACP,CACAI,SACE,OAAKb,KAAKK,QAGHL,KAAKc,SAASd,KAAKK,SAFjB,IAGX,E","sources":["webpack://sureforms/./node_modules/@surecart/components/dist/esm/sc-consumer.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent } from './index-430bb51b.js';\n\nconst ScConsumer = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.mountEmitter = createEvent(this, \"mountConsumer\", 7);\n    this.setContext = async (context) => {\n      this.context = context;\n      return this.promise;\n    };\n    this.promise = new Promise(resolve => {\n      this.resolvePromise = resolve;\n    });\n  }\n  componentWillLoad() {\n    this.mountEmitter.emit(this.setContext);\n  }\n  disconnectedCallback() {\n    this.resolvePromise();\n  }\n  render() {\n    if (!this.context) {\n      return null;\n    }\n    return this.renderer(this.context);\n  }\n};\n\nexport { ScConsumer as sc_consumer };\n"],"names":["ScConsumer","constructor","hostRef","r","this","mountEmitter","c","setContext","async","context","promise","Promise","resolve","resolvePromise","componentWillLoad","emit","disconnectedCallback","render","renderer"],"sourceRoot":""}