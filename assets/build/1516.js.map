{"version":3,"file":"1516.js","mappings":"yJAQIA,EAAe,SAAUC,EAAWC,EAAOC,QACxB,IAAfA,IAAyBA,GAAa,GAC1C,IACIC,EADgD,aAA/BH,EAAUI,YAAYC,KACfL,EAAUM,UAAYN,EAC9CO,EAAoBJ,EAAMI,kBAC9BJ,EAAMI,kBAAoB,WACtB,IAXAC,EAWIC,EAAQC,KACRC,GAAK,IAAAC,GAAWF,MAChBG,EAXD,CAAEC,QADK,IAAIC,SAAQ,SAAUC,GAAOR,EAAUQ,CAAK,IAC/BR,QAASA,GAY5BS,EAAQ,IAAIC,YAAY,eAAgB,CACxCC,SAAS,EACTC,UAAU,EACVC,OAAQ,CACJC,SAAUZ,KACVa,OAAQtB,EACRuB,QAAS,SAAUC,EAAMC,IACPD,KAAQd,EAAMA,EAAKF,GAC1BgB,GAAQC,CACnB,EACAb,OAAQA,KAGhBF,EAAGgB,cAAcV,GACjB,IAAIW,EAAW,WACX,GAAIrB,EACA,OAAOA,EAAkBsB,KAAKpB,EAEtC,EACA,OAAOP,EAAaW,EAAOC,QAAQgB,MAAK,WAAc,OAAOF,GAAY,IAAMA,GACnF,CACJ,C,yGCnCA,MAEMG,EAAoB,MACxB3B,YAAY4B,IACV,IAAAC,GAAiBvB,KAAMsB,GACvBtB,KAAKwB,eAAgB,IAAAC,GAAYzB,KAAM,gBAAiB,GAExDA,KAAK0B,MAAO,EAEZ1B,KAAK2B,MAAO,CACd,CACAC,YACE,IAAIC,EAAIC,EACR,MAAwF,YAArD,QAA7BD,EAAK7B,KAAK+B,qBAAkC,IAAPF,OAAgB,EAASA,EAAGG,aAC9D,WAE6B,QAA7BF,EAAK9B,KAAK+B,qBAAkC,IAAPD,OAAgB,EAASA,EAAGG,cAAgB,QAAU,SACtG,CACAC,SACE,IAAIL,EAAIC,EAAIK,EAAIC,EAAIC,EAAIC,EACxB,OAAQ,IAAAC,GAAE,kBAAmB,CAAEb,KAAM1B,KAAK0B,KAAMc,OAA4F,QAAnFV,EAA2B,QAArBD,EAAK7B,KAAKyC,aAA0B,IAAPZ,OAAgB,EAASA,EAAGa,sBAAmC,IAAPZ,OAAgB,EAASA,EAAGU,OAAQG,KAA0F,QAAnFP,EAA2B,QAArBD,EAAKnC,KAAKyC,aAA0B,IAAPN,OAAgB,EAASA,EAAGO,sBAAmC,IAAPN,OAAgB,EAASA,EAAGJ,YAAaY,QAA2I,QAAjIN,EAAuE,QAAjED,EAAKrC,gBAAmC,EAASA,KAAKyC,aAA0B,IAAPJ,OAAgB,EAASA,EAAGQ,wBAAqC,IAAPP,OAAgB,EAASA,EAAGM,QAASE,OAAQ9C,KAAK4B,YAAamB,QAAS/C,KAAK2B,KAAMqB,WAAYC,IACjjBA,EAAEC,2BACF,MAAMR,EAAiBO,EAAEtC,OACzBX,KAAKwB,cAAc2B,KAAK,CACtBC,KAAM,CAAEV,mBACR,GAER,IAEF,IAAAW,GAAahC,EAAmB,CAAC,QAAS,QAAS,aAAc,gBAAiB,SAAS,GAC3FA,EAAkBiC,MA9BW,sB","sources":["webpack://sureforms/./node_modules/@surecart/components/dist/esm/consumer-1db89974.js","webpack://sureforms/./node_modules/@surecart/components/dist/esm/sc-order-tax-id-input.entry.js"],"sourcesContent":["import { g as getElement } from './index-430bb51b.js';\n\nvar createDeferredPromise = function () {\n    var resolve;\n    var promise = new Promise(function (res) { resolve = res; });\n    return { promise: promise, resolve: resolve };\n};\n\nvar openWormhole = function (Component, props, isBlocking) {\n    if (isBlocking === void 0) { isBlocking = true; }\n    var isConstructor = (Component.constructor.name === 'Function');\n    var Proto = isConstructor ? Component.prototype : Component;\n    var componentWillLoad = Proto.componentWillLoad;\n    Proto.componentWillLoad = function () {\n        var _this = this;\n        var el = getElement(this);\n        var onOpen = createDeferredPromise();\n        var event = new CustomEvent('openWormhole', {\n            bubbles: true,\n            composed: true,\n            detail: {\n                consumer: this,\n                fields: props,\n                updater: function (prop, value) {\n                    var target = (prop in el) ? el : _this;\n                    target[prop] = value;\n                },\n                onOpen: onOpen,\n            },\n        });\n        el.dispatchEvent(event);\n        var willLoad = function () {\n            if (componentWillLoad) {\n                return componentWillLoad.call(_this);\n            }\n        };\n        return isBlocking ? onOpen.promise.then(function () { return willLoad(); }) : (willLoad());\n    };\n};\n\nexport { openWormhole as o };\n","import { r as registerInstance, c as createEvent, h } from './index-430bb51b.js';\nimport { o as openWormhole } from './consumer-1db89974.js';\n\nconst scOrderTaxIdInputCss = \":host{display:block}\";\n\nconst ScOrderTaxIdInput = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.scUpdateOrder = createEvent(this, \"scUpdateOrder\", 7);\n    /** Force show the field. */\n    this.show = false;\n    /** Is this busy */\n    this.busy = false;\n  }\n  getStatus() {\n    var _a, _b;\n    if (((_a = this.taxIdentifier) === null || _a === void 0 ? void 0 : _a.number_type) !== 'eu_vat') {\n      return 'unknown';\n    }\n    return ((_b = this.taxIdentifier) === null || _b === void 0 ? void 0 : _b.valid_eu_vat) ? 'valid' : 'invalid';\n  }\n  render() {\n    var _a, _b, _c, _d, _e, _f;\n    return (h(\"sc-tax-id-input\", { show: this.show, number: (_b = (_a = this.order) === null || _a === void 0 ? void 0 : _a.tax_identifier) === null || _b === void 0 ? void 0 : _b.number, type: (_d = (_c = this.order) === null || _c === void 0 ? void 0 : _c.tax_identifier) === null || _d === void 0 ? void 0 : _d.number_type, country: (_f = (_e = this === null || this === void 0 ? void 0 : this.order) === null || _e === void 0 ? void 0 : _e.shipping_address) === null || _f === void 0 ? void 0 : _f.country, status: this.getStatus(), loading: this.busy, onScChange: e => {\n        e.stopImmediatePropagation();\n        const tax_identifier = e.detail;\n        this.scUpdateOrder.emit({\n          data: { tax_identifier },\n        });\n      } }));\n  }\n};\nopenWormhole(ScOrderTaxIdInput, ['draft', 'order', 'tax_status', 'taxIdentifier', 'busy'], false);\nScOrderTaxIdInput.style = scOrderTaxIdInputCss;\n\nexport { ScOrderTaxIdInput as sc_order_tax_id_input };\n"],"names":["openWormhole","Component","props","isBlocking","Proto","constructor","name","prototype","componentWillLoad","resolve","_this","this","el","g","onOpen","promise","Promise","res","event","CustomEvent","bubbles","composed","detail","consumer","fields","updater","prop","value","dispatchEvent","willLoad","call","then","ScOrderTaxIdInput","hostRef","r","scUpdateOrder","c","show","busy","getStatus","_a","_b","taxIdentifier","number_type","valid_eu_vat","render","_c","_d","_e","_f","h","number","order","tax_identifier","type","country","shipping_address","status","loading","onScChange","e","stopImmediatePropagation","emit","data","o","style"],"sourceRoot":""}