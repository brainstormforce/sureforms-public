{"version":3,"file":"2740.js","mappings":"yJAQIA,EAAe,SAAUC,EAAWC,EAAOC,QACxB,IAAfA,IAAyBA,GAAa,GAC1C,IACIC,EADgD,aAA/BH,EAAUI,YAAYC,KACfL,EAAUM,UAAYN,EAC9CO,EAAoBJ,EAAMI,kBAC9BJ,EAAMI,kBAAoB,WACtB,IAXAC,EAWIC,EAAQC,KACRC,GAAK,IAAAC,GAAWF,MAChBG,EAXD,CAAEC,QADK,IAAIC,SAAQ,SAAUC,GAAOR,EAAUQ,CAAK,IAC/BR,QAASA,GAY5BS,EAAQ,IAAIC,YAAY,eAAgB,CACxCC,SAAS,EACTC,UAAU,EACVC,OAAQ,CACJC,SAAUZ,KACVa,OAAQtB,EACRuB,QAAS,SAAUC,EAAMC,IACPD,KAAQd,EAAMA,EAAKF,GAC1BgB,GAAQC,CACnB,EACAb,OAAQA,KAGhBF,EAAGgB,cAAcV,GACjB,IAAIW,EAAW,WACX,GAAIrB,EACA,OAAOA,EAAkBsB,KAAKpB,EAEtC,EACA,OAAOP,EAAaW,EAAOC,QAAQgB,MAAK,WAAc,OAAOF,GAAY,IAAMA,GACnF,CACJ,C,sGCnCA,MAEMG,EAAmB,MACvB3B,YAAY4B,IACV,IAAAC,GAAiBvB,KAAMsB,EACzB,CACAE,yBACExB,KAAKyB,mBAAoB,CAC3B,CACAC,6BACE,IAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAChD,OAA4L,QAArLT,EAAqI,QAA/HD,EAAuE,QAAjED,EAAK3B,gBAAmC,EAASA,KAAKuC,aAA0B,IAAPZ,OAAgB,EAASA,EAAGa,sBAAmC,IAAPZ,OAAgB,EAASA,EAAGa,cAA2B,IAAPZ,OAAgB,EAASA,EAAGa,mBAA4M,QAArLV,EAAqI,QAA/HD,EAAuE,QAAjED,EAAK9B,gBAAmC,EAASA,KAAKuC,aAA0B,IAAPT,OAAgB,EAASA,EAAGU,sBAAmC,IAAPT,OAAgB,EAASA,EAAGU,cAA2B,IAAPT,OAAgB,EAASA,EAAGW,aAGxc,IAAAC,GAAE,4BAA6B,CAAEC,OAAQ7C,KAAK6C,OAAQC,MAAO9C,KAAK8C,MAAOP,MAAOvC,KAAKuC,MAAOQ,gBAAuM,QAArLZ,EAAqI,QAA/HD,EAAuE,QAAjED,EAAKjC,gBAAmC,EAASA,KAAKuC,aAA0B,IAAPN,OAAgB,EAASA,EAAGO,sBAAmC,IAAPN,OAAgB,EAASA,EAAGO,cAA2B,IAAPN,OAAgB,EAASA,EAAGQ,WAAYK,eAAsM,QAArLV,EAAqI,QAA/HD,EAAuE,QAAjED,EAAKpC,gBAAmC,EAASA,KAAKuC,aAA0B,IAAPH,OAAgB,EAASA,EAAGI,sBAAmC,IAAPH,OAAgB,EAASA,EAAGI,cAA2B,IAAPH,OAAgB,EAASA,EAAGI,kBAF5jB,EAGX,CACAO,SACE,OAAQ,IAAAL,GAAE,EAAAM,EAAM,CAAEC,MAAO,CAAE,YAAanD,KAAKyB,oBAAsBzB,KAAK8C,QAAW9C,KAAK0B,8BAA+B1B,KAAKyB,mBAAqBzB,KAAK8C,SAAU,IAAAF,GAAE,aAAc,CAAEQ,MAAO,CAAE,YAAa,uCAA0CpD,KAAKqD,aAAcrD,KAAKsD,OAAQ,IAAAV,GAAE,cAAe,MACrS,IAEF,IAAAW,GAAalC,EAAkB,CAAC,QAAS,SAAU,SAAS,GAC5DA,EAAiB+B,MArBW,sB","sources":["webpack://sureforms/./node_modules/@surecart/components/dist/esm/consumer-1db89974.js","webpack://sureforms/./node_modules/@surecart/components/dist/esm/sc-express-payment.entry.js"],"sourcesContent":["import { g as getElement } from './index-430bb51b.js';\n\nvar createDeferredPromise = function () {\n    var resolve;\n    var promise = new Promise(function (res) { resolve = res; });\n    return { promise: promise, resolve: resolve };\n};\n\nvar openWormhole = function (Component, props, isBlocking) {\n    if (isBlocking === void 0) { isBlocking = true; }\n    var isConstructor = (Component.constructor.name === 'Function');\n    var Proto = isConstructor ? Component.prototype : Component;\n    var componentWillLoad = Proto.componentWillLoad;\n    Proto.componentWillLoad = function () {\n        var _this = this;\n        var el = getElement(this);\n        var onOpen = createDeferredPromise();\n        var event = new CustomEvent('openWormhole', {\n            bubbles: true,\n            composed: true,\n            detail: {\n                consumer: this,\n                fields: props,\n                updater: function (prop, value) {\n                    var target = (prop in el) ? el : _this;\n                    target[prop] = value;\n                },\n                onOpen: onOpen,\n            },\n        });\n        el.dispatchEvent(event);\n        var willLoad = function () {\n            if (componentWillLoad) {\n                return componentWillLoad.call(_this);\n            }\n        };\n        return isBlocking ? onOpen.promise.then(function () { return willLoad(); }) : (willLoad());\n    };\n};\n\nexport { openWormhole as o };\n","import { r as registerInstance, h, H as Host } from './index-430bb51b.js';\nimport { o as openWormhole } from './consumer-1db89974.js';\n\nconst scExpressPaymentCss = \":host{display:block}\";\n\nconst ScExpressPayment = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  onPaymentRequestLoaded() {\n    this.hasPaymentOptions = true;\n  }\n  renderStripePaymentRequest() {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n    if (!((_c = (_b = (_a = this === null || this === void 0 ? void 0 : this.order) === null || _a === void 0 ? void 0 : _a.processor_data) === null || _b === void 0 ? void 0 : _b.stripe) === null || _c === void 0 ? void 0 : _c.publishable_key) || !((_f = (_e = (_d = this === null || this === void 0 ? void 0 : this.order) === null || _d === void 0 ? void 0 : _d.processor_data) === null || _e === void 0 ? void 0 : _e.stripe) === null || _f === void 0 ? void 0 : _f.account_id)) {\n      return '';\n    }\n    return (h(\"sc-stripe-payment-request\", { formId: this.formId, debug: this.debug, order: this.order, stripeAccountId: (_j = (_h = (_g = this === null || this === void 0 ? void 0 : this.order) === null || _g === void 0 ? void 0 : _g.processor_data) === null || _h === void 0 ? void 0 : _h.stripe) === null || _j === void 0 ? void 0 : _j.account_id, publishableKey: (_m = (_l = (_k = this === null || this === void 0 ? void 0 : this.order) === null || _k === void 0 ? void 0 : _k.processor_data) === null || _l === void 0 ? void 0 : _l.stripe) === null || _m === void 0 ? void 0 : _m.publishable_key }));\n  }\n  render() {\n    return (h(Host, { class: { 'is-empty': !this.hasPaymentOptions && !this.debug } }, this.renderStripePaymentRequest(), (this.hasPaymentOptions || this.debug) && h(\"sc-divider\", { style: { '--spacing': 'calc(var(--sc-form-row-spacing)/2)' } }, this.dividerText), this.busy && h(\"sc-block-ui\", null)));\n  }\n};\nopenWormhole(ScExpressPayment, ['order', 'formId', 'busy'], false);\nScExpressPayment.style = scExpressPaymentCss;\n\nexport { ScExpressPayment as sc_express_payment };\n"],"names":["openWormhole","Component","props","isBlocking","Proto","constructor","name","prototype","componentWillLoad","resolve","_this","this","el","g","onOpen","promise","Promise","res","event","CustomEvent","bubbles","composed","detail","consumer","fields","updater","prop","value","dispatchEvent","willLoad","call","then","ScExpressPayment","hostRef","r","onPaymentRequestLoaded","hasPaymentOptions","renderStripePaymentRequest","_a","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","order","processor_data","stripe","publishable_key","account_id","h","formId","debug","stripeAccountId","publishableKey","render","H","class","style","dividerText","busy","o"],"sourceRoot":""}